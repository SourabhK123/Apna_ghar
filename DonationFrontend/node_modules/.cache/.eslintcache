[{"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\index.js":"1","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\reportWebVitals.js":"2","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\App.js":"3","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\MainHome.js":"4","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\ContactUs.js":"5","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\UserLoginForm.js":"6","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\ForgotPassword.js":"7","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\Footer.js":"8","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\AboutUs.js":"9","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminRecipientVerification.js":"10","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminRecipientDetails.js":"11","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminDonationAssign.js":"12","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientRegistrationForm.js":"13","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminDonationAlreadyAssign.js":"14","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientEditProfile.js":"15","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientRequestLandingPage.js":"16","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientRequestDetails.js":"17","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientHome.js":"18","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientProfile.js":"19","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerRegistrationForm.js":"20","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerDonationDetails.js":"21","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerDonationToBeCollected.js":"22","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerHome.js":"23","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerDonationIsCollected.js":"24","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerProfile.js":"25","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerEditProfile.js":"26","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonationLandingPage.js":"27","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorHome.js":"28","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorRegistrationForm.js":"29","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorProfile.js":"30","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorEditProfile.js":"31","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorDonationDetails.js":"32","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\NavigationBar.js":"33","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\EditPassword.js":"34","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminNavigationBar.js":"35","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientNavigationBar.js":"36","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\DonationForm.js":"37","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\DonerApiService.js":"38","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\DonationApiService.js":"39","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\Footer.js":"40","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\AdminApiService.js":"41","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\RecipientApiService.js":"42","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\VolunteerApiService.js":"43","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerNavigationBar.js":"44","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorNavigationBar.js":"45","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonationForm.js":"46"},{"size":561,"mtime":1679683788000,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1679683788000,"results":"49","hashOfConfig":"48"},{"size":7656,"mtime":1679683788000,"results":"50","hashOfConfig":"48"},{"size":7514,"mtime":1693885229284,"results":"51","hashOfConfig":"48"},{"size":3991,"mtime":1693885568558,"results":"52","hashOfConfig":"48"},{"size":7244,"mtime":1693885451274,"results":"53","hashOfConfig":"48"},{"size":7823,"mtime":1693885637776,"results":"54","hashOfConfig":"48"},{"size":4186,"mtime":1693590307991,"results":"55","hashOfConfig":"48"},{"size":3865,"mtime":1693885555795,"results":"56","hashOfConfig":"48"},{"size":4802,"mtime":1679683788000,"results":"57","hashOfConfig":"48"},{"size":3211,"mtime":1679683788000,"results":"58","hashOfConfig":"48"},{"size":7427,"mtime":1693770693585,"results":"59","hashOfConfig":"48"},{"size":13222,"mtime":1693240392000,"results":"60","hashOfConfig":"48"},{"size":2531,"mtime":1693591591617,"results":"61","hashOfConfig":"48"},{"size":11418,"mtime":1679683788000,"results":"62","hashOfConfig":"48"},{"size":3876,"mtime":1693841684209,"results":"63","hashOfConfig":"48"},{"size":2627,"mtime":1679683788000,"results":"64","hashOfConfig":"48"},{"size":5362,"mtime":1693841656710,"results":"65","hashOfConfig":"48"},{"size":3188,"mtime":1679683788000,"results":"66","hashOfConfig":"48"},{"size":13568,"mtime":1679683788000,"results":"67","hashOfConfig":"48"},{"size":2657,"mtime":1679683788000,"results":"68","hashOfConfig":"48"},{"size":3699,"mtime":1679683788000,"results":"69","hashOfConfig":"48"},{"size":2676,"mtime":1679683788000,"results":"70","hashOfConfig":"48"},{"size":3861,"mtime":1679683788000,"results":"71","hashOfConfig":"48"},{"size":2865,"mtime":1679683788000,"results":"72","hashOfConfig":"48"},{"size":11044,"mtime":1679683788000,"results":"73","hashOfConfig":"48"},{"size":3541,"mtime":1679683788000,"results":"74","hashOfConfig":"48"},{"size":2251,"mtime":1679683788000,"results":"75","hashOfConfig":"48"},{"size":11083,"mtime":1693894151687,"results":"76","hashOfConfig":"48"},{"size":2590,"mtime":1679683788000,"results":"77","hashOfConfig":"48"},{"size":8527,"mtime":1679683788000,"results":"78","hashOfConfig":"48"},{"size":2518,"mtime":1679683788000,"results":"79","hashOfConfig":"48"},{"size":1974,"mtime":1693723758734,"results":"80","hashOfConfig":"48"},{"size":3936,"mtime":1679683788000,"results":"81","hashOfConfig":"48"},{"size":1957,"mtime":1693745948318,"results":"82","hashOfConfig":"48"},{"size":2061,"mtime":1693745964428,"results":"83","hashOfConfig":"48"},{"size":5671,"mtime":1679683788000,"results":"84","hashOfConfig":"48"},{"size":760,"mtime":1679683788000,"results":"85","hashOfConfig":"48"},{"size":1564,"mtime":1679683788000,"results":"86","hashOfConfig":"48"},{"size":3517,"mtime":1679683788000,"results":"87","hashOfConfig":"48"},{"size":517,"mtime":1679683788000,"results":"88","hashOfConfig":"48"},{"size":1744,"mtime":1679683788000,"results":"89","hashOfConfig":"48"},{"size":801,"mtime":1679683788000,"results":"90","hashOfConfig":"48"},{"size":2131,"mtime":1693746006481,"results":"91","hashOfConfig":"48"},{"size":1869,"mtime":1693745906166,"results":"92","hashOfConfig":"48"},{"size":5178,"mtime":1679683788000,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vqzi73",{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\index.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\reportWebVitals.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\App.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\MainHome.js",["254"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\ContactUs.js",["255","256","257"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\UserLoginForm.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\ForgotPassword.js",["258","259","260","261","262","263","264","265","266"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\Footer.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\AboutUs.js",["267"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminRecipientVerification.js",["268","269","270"],[],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Container,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getUnverifiedRecipientList,\r\n  updateRecipientKYCStatus,\r\n} from \"../../services/RecipientApiService\";\r\nimport { AdminNavigationBar } from \"./AdminNavigationBar\";\r\n\r\nexport function AdminRecipientVerification() {\r\n  const [recipientDetails, setRecipientDetails] = useState([]);\r\n  const adminObj = JSON.parse(localStorage.getItem(\"admin\"));\r\n  const navigate = useNavigate();\r\n\r\n  async function fetchRecipientData() {\r\n    const response = await getUnverifiedRecipientList();\r\n    setRecipientDetails(response.data);\r\n    console.log(response.data);\r\n  }\r\n\r\n  //for fetching the initial data\r\n  useEffect(() => {\r\n    console.log(\"inside\" + adminObj);\r\n    if (adminObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchRecipientData();\r\n  }, []);\r\n\r\n  function handleChange(e, recipientObj) {\r\n    recipientObj.kycverified = e.target.value;\r\n  }\r\n\r\n  async function saveChanges(recipientObj) {\r\n    if (recipientObj.kycverified != \"true\") return;\r\n\r\n    console.log(recipientObj);\r\n    const response = await updateRecipientKYCStatus(recipientObj);\r\n    fetchRecipientData();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AdminNavigationBar></AdminNavigationBar>\r\n      <Container style={{ minHeight: \"500px\" }}>\r\n        <Container className=\"mt-4 mb-4 text-center\">\r\n          <Alert className=\"bg-primary text-white shadow-lg\">\r\n            <h3 className=\"mb-0\">Pending KYC verification of recipient</h3>\r\n          </Alert>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Row>\r\n            {recipientDetails.map((rd) => {\r\n              return (\r\n                <Col md={6} lg={4} className=\"mb-4\">\r\n                  <Card>\r\n                    <Card.Header className=\"bg-primary text-white text-center\">\r\n                      <h4 className=\"mb-0\">Recipient Details</h4>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <Table responsive striped bordered>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>Recipient ID</strong>\r\n                            </td>\r\n                            <td>{rd.recipientId}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>Recipient Name</strong>\r\n                            </td>\r\n                            <td>{rd.recipientName}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>Registration ID</strong>\r\n                            </td>\r\n                            <td>{rd.recipientRegistrationId}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>Address</strong>\r\n                            </td>\r\n                            <td>{rd.recipientAddress}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>Zip Code</strong>\r\n                            </td>\r\n                            <td>{rd.recipientZipCode}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <strong>Approve KYC</strong>\r\n                            </td>\r\n                            <td>\r\n                              <select\r\n                                name=\"kycverified\"\r\n                                onChange={(e) => {\r\n                                  handleChange(e, rd);\r\n                                }}\r\n                              >\r\n                                <option value={null}>Select</option>\r\n                                <option value=\"false\">Unverified</option>\r\n                                <option value=\"true\">Verified</option>\r\n                              </select>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </Table>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-center\">\r\n                      <Button\r\n                        onClick={() => saveChanges(rd)}\r\n                        className=\"btn-primary\"\r\n                      >\r\n                        Save\r\n                      </Button>{\" \"}\r\n                    </Card.Footer>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminRecipientDetails.js",["271","272"],[],"import { useEffect, useState } from \"react\";\r\nimport { Alert, Container, Table, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getRecipientList } from \"../../services/RecipientApiService\";\r\nimport { AdminNavigationBar } from \"./AdminNavigationBar\";\r\n\r\nexport function AdminRecipientDetails() {\r\n  const [recipientDetails, setRecipientDetails] = useState([]);\r\n  const adminObj = JSON.parse(localStorage.getItem(\"admin\"));\r\n  const navigate = useNavigate();\r\n\r\n  async function fetchRecipientDetails() {\r\n    const response = await getRecipientList();\r\n    console.log(response.data);\r\n    setRecipientDetails(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"inside\" + adminObj);\r\n    if (adminObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchRecipientDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AdminNavigationBar></AdminNavigationBar>\r\n      <Container className=\"mt-4 mb-4\" style={{ minHeight: \"470px\" }}>\r\n        <Card className=\"shadow\">\r\n          <Card.Header className=\"text-white text-center bg-primary\">\r\n            <h3 className=\"mb-0\">All Recipient Details</h3>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Table responsive striped bordered hover>\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th colSpan=\"3\">Basic Info</th>\r\n                  <th>||</th>\r\n                  <th colSpan=\"3\">Quantity Required</th>\r\n                  <th>||</th>\r\n                  <th colSpan=\"3\">Quantity Received</th>\r\n                </tr>\r\n                <tr className=\"text-center\">\r\n                  <th>Serial ID</th>\r\n                  <th>Recipient Name</th>\r\n                  <th>Recipient KYC Status</th>\r\n                  <th>||</th>\r\n                  <th>Raw Food</th>\r\n                  <th>Clothes</th>\r\n                  <th>Stationary</th>\r\n                  <th>||</th>\r\n                  <th>Raw Food</th>\r\n                  <th>Clothes</th>\r\n                  <th>Stationary</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {recipientDetails.map((rd, index) => {\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`text-center ${\r\n                        index % 2 === 0 ? \"bg-light\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <td>{index + 1}</td>\r\n                      <td>{rd.recipientName}</td>\r\n                      <td>{rd.kycverified ? \"Verified\" : \"Pending\"}</td>\r\n                      <td>||</td>\r\n                      <td>{rd.rawFoodQuantityRequired}</td>\r\n                      <td>{rd.clothesQuantityRequired}</td>\r\n                      <td>{rd.stationaryQuantityRequired}</td>\r\n                      <td>||</td>\r\n                      <td>{rd.rawFoodQuantityReceived}</td>\r\n                      <td>{rd.clothesQuantityReceived}</td>\r\n                      <td>{rd.stationaryQuantityReceived}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminDonationAssign.js",["273","274","275","276"],[],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  getNotAssignedDonationDetails,\r\n  updateDonorDonationDetail,\r\n} from \"../../services/DonationApiService\";\r\nimport { Alert, Button, Container, Table } from \"react-bootstrap\";\r\nimport { getVolunteerList } from \"../../services/VolunteerApiService\";\r\nimport { getVerifiedRecipientList } from \"../../services/RecipientApiService\";\r\nimport { AdminNavigationBar } from \"./AdminNavigationBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function AdminDonationAssign() {\r\n  const [donorDonationDetails, setDonorDonationDetails] = useState([]);\r\n  const [volunteerDetails, setVolunteerDetails] = useState([]);\r\n  const [recipientDetails, setRecipientDetails] = useState([]);\r\n  const adminObj = JSON.parse(localStorage.getItem(\"admin\"));\r\n  const navigate = useNavigate();\r\n\r\n  async function fetchDonorDonationData() {\r\n    const response = await getNotAssignedDonationDetails();\r\n    console.log(\"donor donation data\");\r\n    console.log(response.data);\r\n    setDonorDonationDetails(response.data);\r\n  }\r\n\r\n  async function fetchVolunteerData() {\r\n    const response = await getVolunteerList();\r\n    console.log(\"volunteer data\");\r\n    console.log(response.data);\r\n    setVolunteerDetails(response.data);\r\n  }\r\n\r\n  async function fetchRecipientData() {\r\n    const response = await getVerifiedRecipientList();\r\n    console.log(\"recipient data\");\r\n    console.log(response.data);\r\n    setRecipientDetails(response.data);\r\n  }\r\n\r\n  //for fetching the initial data\r\n  useEffect(() => {\r\n    console.log(\"inside\" + adminObj);\r\n    if (adminObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchDonorDonationData();\r\n    fetchVolunteerData();\r\n    fetchRecipientData();\r\n  }, []);\r\n\r\n  //causing infinite loop\r\n  // useEffect( () => {\r\n  //     fetchDonorDonationData();\r\n  // },[donorDonationDetails]);\r\n\r\n  function handleChangeForVolunteer(e, ddObj) {\r\n    console.log(ddObj.donationId);\r\n    console.log(e.target.value + \"  \" + e.target.name);\r\n\r\n    //adding volunteer to donorDonationDetails after finding the selected dropdown\r\n    // for (var index in donorDonationDetails){\r\n    //     if(donorDonationDetails[index].donationId == donationId){\r\n    //         donorDonationDetails[index].volunteer = volunteerDetails.find( volunteer => {\r\n    //             return volunteer.volunteerId == e.target.value;\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    ddObj.volunteer = volunteerDetails.find((volunteer) => {\r\n      return volunteer.volunteerId == e.target.value;\r\n    });\r\n\r\n    console.log(\"after adding volunteer to ddd\");\r\n    console.log(donorDonationDetails);\r\n  }\r\n\r\n  function handleChangeForRecipient(e, ddObj) {\r\n    console.log(ddObj.donationId);\r\n    console.log(e.target.value + \"  \" + e.target.name);\r\n\r\n    ddObj.recipient = recipientDetails.find((recipient) => {\r\n      return recipient.recipientId == e.target.value;\r\n    });\r\n\r\n    console.log(\"after adding recipient to ddd\");\r\n    console.log(donorDonationDetails);\r\n  }\r\n\r\n  async function saveChanges(donorDonationObj) {\r\n    //need to add validate because initial volunteer value is null\r\n    if (donorDonationObj.volunteer == null) return; //need to add more user friendly logic\r\n\r\n    //need to add validate because initial volunteer value is null\r\n    if (donorDonationObj.recipient == null) return; //need to add more user friendly logic\r\n\r\n    //when clicked on SAVE, we get the donorDonationObj with updated volunteer\r\n    console.log(donorDonationObj);\r\n\r\n    //below code is working, commented for now\r\n    const response = await updateDonorDonationDetail(donorDonationObj);\r\n\r\n    //fetching updated details into state\r\n    fetchDonorDonationData();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AdminNavigationBar></AdminNavigationBar>\r\n      <Container style={{ minHeight: \"490px\" }}>\r\n        <Container className=\"mt-4 mb-4 text-center\">\r\n          <Alert className=\"bg-primary text-white shadow-lg\">\r\n            <h3 className=\"mb-0\">\r\n              Table for Assigning Volunteers to Collect Donations\r\n            </h3>\r\n          </Alert>\r\n        </Container>\r\n\r\n        <Container className=\"p-3 border border-primary rounded\">\r\n          <Table responsive striped bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Serial ID</th>\r\n                <th>Raw Food Quantity</th>\r\n                <th>Clothes Quantity</th>\r\n                <th>Stationary Quantity</th>\r\n                <th>Choose Volunteer</th>\r\n                <th>Choose Recipient</th>\r\n                <th>Save Changes</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {donorDonationDetails.map((dd, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{dd.rawFoodQuantity}</td>\r\n                    <td>{dd.clothesQuantity}</td>\r\n                    <td>{dd.stationaryQuantity}</td>\r\n                    <td>\r\n                      <select\r\n                        className=\"form-select\"\r\n                        name=\"volunteer\"\r\n                        onChange={(e) => {\r\n                          handleChangeForVolunteer(e, dd);\r\n                        }}\r\n                        required\r\n                      >\r\n                        <option value={null}>Select</option>\r\n                        {volunteerDetails\r\n                          .sort(function (a, b) {\r\n                            return (\r\n                              Math.abs(\r\n                                a.volunteerZipCode - dd.donor.donorZipCode\r\n                              ) -\r\n                              Math.abs(\r\n                                b.volunteerZipCode - dd.donor.donorZipCode\r\n                              )\r\n                            );\r\n                          })\r\n                          .map((volun) => {\r\n                            return (\r\n                              <option value={volun.volunteerId}>\r\n                                {volun.volunteerName}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <select\r\n                        className=\"form-select\"\r\n                        name=\"recipient\"\r\n                        onChange={(e) => {\r\n                          handleChangeForRecipient(e, dd);\r\n                        }}\r\n                        required\r\n                      >\r\n                        <option value={null}>Select</option>\r\n                        {recipientDetails.map((recep) => {\r\n                          return (\r\n                            <option value={recep.recipientId}>\r\n                              {recep.recipientName}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => saveChanges(dd)}\r\n                        className=\"btn-sm btn-primary\"\r\n                      >\r\n                        Save\r\n                      </Button>{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientRegistrationForm.js",["277"],[],"import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { saveRecipient } from \"../../services/RecipientApiService\";\r\nimport { NavigationBar } from \"../NavigationBar\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nexport function RecipientRegistrationForm() {\r\n  // Define state for form inputs and errors\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [recipientDetails, setReipientDetails] = useState({\r\n    recipientName: \"\",\r\n    recipientPhone: \"\",\r\n    recipientEmail: \"\",\r\n    recipientPassword: \"\",\r\n    recipientConfirmPassword: \"\",\r\n    recipientZipCode: \"\",\r\n    recipientAddress: \"\",\r\n    recipientRegistrationId: \"\",\r\n  });\r\n\r\n  //for error State\r\n  const [recipientNameError, setReipientNameError] = useState(\"\");\r\n  const [recipientPhoneError, setReipientPhoneError] = useState(\"\");\r\n  const [recipientEmailError, setReipientEmailError] = useState(\"\");\r\n  const [recipientPasswordError, setReipientPasswordError] = useState(\"\");\r\n  const [confirmrecipientPasswordError, setConfirmrecipientPasswordError] =\r\n    useState(\"\");\r\n  const [recipientZipCodeError, setReipientZipCodeError] = useState(\"\");\r\n  const [recipientAddressError, setRecipientAddressError] = useState(\"\");\r\n  const [recipientRegistrationIdError, setRecipientRegistrationIdError] =\r\n    useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setReipientDetails({\r\n      ...recipientDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const sendEmail = (formData) => {\r\n    emailjs\r\n      .send(\r\n        \"service_iwmii1r\",\r\n        \"template_8yummw1\",\r\n        {\r\n          from_name: \"CharityXchange\",\r\n          to_name: formData.donorName,\r\n          email: formData.donorEmail,\r\n        },\r\n\r\n        \"nIhHAx-RhF227btcV\"\r\n      )\r\n\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  };\r\n\r\n  // Define function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validate form inputs\r\n    if (!validate()) {\r\n      return;\r\n    } else {\r\n      const formData = {\r\n        recipientName: recipientDetails.recipientName,\r\n        recipientPhone: recipientDetails.recipientPhone,\r\n        recipientEmail: recipientDetails.recipientEmail.toLowerCase(),\r\n        recipientPassword: recipientDetails.recipientPassword,\r\n        recipientAddress: recipientDetails.recipientAddress,\r\n        recipientZipCode: recipientDetails.recipientZipCode,\r\n        recipientRegistrationId: recipientDetails.recipientRegistrationId,\r\n      };\r\n\r\n      console.log(formData);\r\n      const response = await saveRecipient(formData);\r\n\r\n      console.log(response.data);\r\n      if (response.status === 200) {\r\n        if(response.data != \"email id present\"){\r\n          sendEmail(formData);\r\n          setReipientDetails({\r\n            recipientName: \"\",\r\n            recipientPhone: \"\",\r\n            recipientEmail: \"\",\r\n            recipientZipCode: \"\",\r\n            recipientAddress: \"\",\r\n            recipientPassword: \"\",\r\n            recipientConfirmPassword: \"\",\r\n            recipientRegistrationId: \"\",\r\n          });\r\n          setModalOpen(true);\r\n        }\r\n        else{\r\n          setReipientEmailError(\"Email already registered. Please login or use different email for registration\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //validation of field\r\n  const validate = () => {\r\n    let isValid = true;\r\n    // recipientName validation\r\n    if (recipientDetails.recipientName.trim() === \"\") {\r\n      setReipientNameError(\"recipient Name is required\");\r\n      isValid = false;\r\n    } else if (!/^[a-zA-Z\\s]+$/.test(recipientDetails.recipientName)) {\r\n      setReipientNameError(\"recipient name can only contain letters\");\r\n      isValid = false;\r\n    } else {\r\n      setReipientNameError(\"\");\r\n    }\r\n\r\n    // recipientPhone validation\r\n    if (recipientDetails.recipientPhone.trim() === \"\") {\r\n      setReipientPhoneError(\"Phone number is required\");\r\n      isValid = false;\r\n    } else if (!/^[6-9]{1}[0-9]{9}$/.test(recipientDetails.recipientPhone)) {\r\n      setReipientPhoneError(\"Phone number can only contain numbers and of 10 digits and first digit(6-9) \");\r\n      isValid = false;\r\n    } else {\r\n      setReipientPhoneError(\"\");\r\n    }\r\n\r\n    // recipientEmail validation\r\n    if (recipientDetails.recipientEmail.trim() === \"\") {\r\n      setReipientEmailError(\"Email is required\");\r\n      isValid = false;\r\n    } else if (\r\n      !/^[a-z]{1}[a-z0-9]{0,}@[a-z]{1,}\\.[a-z]{1,}$/i.test(recipientDetails.recipientEmail)\r\n    ) {\r\n      setReipientEmailError(\"Email is not valid\");\r\n      isValid = false;\r\n    } else {\r\n      setReipientEmailError(\"\");\r\n    }\r\n    \r\n    // Recipient ZIP code validation\r\n    if (!/^4[0-4]\\d{4}$/.test(recipientDetails.recipientZipCode.trim())) {\r\n      setReipientZipCodeError(\"Please enter a valid 6-digit ZIP code  and for mh first 2 digit (40-44)\");\r\n    } else {\r\n      setReipientZipCodeError(\"\");\r\n    }\r\n\r\n    // Recipient Address validation\r\n    if (!recipientDetails.recipientAddress.trim()) {\r\n      setRecipientAddressError(\"Address is required\");\r\n      isValid = false;\r\n    } else {\r\n      setRecipientAddressError(\"\");\r\n    }\r\n\r\n    // recipientRegistrationId validation\r\n    if (recipientDetails.recipientRegistrationId.trim() === \"\") {\r\n      setRecipientRegistrationIdError(\"registrationId is required\");\r\n      isValid = false;\r\n    } else if (!/^[0-9]+$/.test(recipientDetails.recipientRegistrationId)) {\r\n      setRecipientRegistrationIdError(\r\n        \"recipient registrationId can only contain numbers\"\r\n      );\r\n      isValid = false;\r\n    } else if (recipientDetails.recipientRegistrationId.length !== 10) {\r\n      setRecipientRegistrationIdError(\r\n        \"recipient RegistrationId must be 10 digit\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setRecipientRegistrationIdError(\"\");\r\n    }\r\n\r\n    // password validation\r\n    if (recipientDetails.recipientPassword.trim() === \"\") {\r\n      setReipientPasswordError(\"Password is required\");\r\n      isValid = false;\r\n    } else if (recipientDetails.recipientPassword.length < 8) {\r\n      setReipientPasswordError(\r\n        \"recipientPassword must be at least 8 characters long\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setReipientPasswordError(\"\");\r\n    }\r\n\r\n    // Confirm password validation\r\n    if (recipientDetails.recipientConfirmPassword.trim() === \"\") {\r\n      setConfirmrecipientPasswordError(\r\n        \"confirm Password is required\"\r\n      );\r\n      isValid = false;\r\n    } else if (\r\n      recipientDetails.recipientPassword !==\r\n      recipientDetails.recipientConfirmPassword\r\n    ) {\r\n      setConfirmrecipientPasswordError(\"Password Not Matched\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmrecipientPasswordError(\"\");\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavigationBar></NavigationBar>\r\n      <Container className=\"mt-4 shadow p-4 bg-light h-500 mb-4\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1 className=\"text-center mb-4 text-primary\">\r\n            Recipient Registration Form\r\n          </h1>\r\n          <Row>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Recipient Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  name=\"recipientName\"\r\n                  value={recipientDetails.recipientName}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientNameError && (\r\n                  <span style={{ color: \"red\" }}>{recipientNameError} </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Recipient Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"recipientEmail\"\r\n                  value={recipientDetails.recipientEmail}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientEmailError && (\r\n                  <span style={{ color: \"red\" }}>{recipientEmailError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label> Recipient Phone Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter phone\"\r\n                  name=\"recipientPhone\"\r\n                  value={recipientDetails.recipientPhone}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientPhoneError && (\r\n                  <span style={{ color: \"red\" }}>{recipientPhoneError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Recipient Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter address\"\r\n                  name=\"recipientAddress\"\r\n                  value={recipientDetails.recipientAddress}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientAddressError && (\r\n                  <span style={{ color: \"red\" }}>{recipientAddressError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label> Recipient RegistrationId</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter RegistrationId\"\r\n                  name=\"recipientRegistrationId\"\r\n                  value={recipientDetails.recipientRegistrationId}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientRegistrationIdError && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {recipientRegistrationIdError}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Recipient ZIP Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter ZIP code\"\r\n                  name=\"recipientZipCode\"\r\n                  value={recipientDetails.recipientZipCode}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientZipCodeError && (\r\n                  <span style={{ color: \"red\" }}>{recipientZipCodeError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Recipient Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  name=\"recipientPassword\"\r\n                  value={recipientDetails.recipientPassword}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {recipientPasswordError && (\r\n                  <span style={{ color: \"red\" }}>{recipientPasswordError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Confirm Recipient Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"recipientConfirmPassword\"\r\n                  value={recipientDetails.recipientConfirmPassword}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {confirmrecipientPasswordError && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {confirmrecipientPasswordError}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"success\"\r\n            className=\"rounded-pill bg-primary\"\r\n          >\r\n            Register recipient\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <Modal show={modalOpen} onHide={() => setModalOpen(false)}>\r\n        <Modal.Header>\r\n          <Modal.Title>Success</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Recipient has been registered successfully !</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => setModalOpen(false)}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminDonationAlreadyAssign.js",["278","279","280"],[],"import { useEffect, useState } from \"react\";\r\nimport { getAssignedDonationDetails } from \"../../services/DonationApiService\";\r\nimport { Alert, Container, Table } from \"react-bootstrap\";\r\nimport { AdminNavigationBar } from \"./AdminNavigationBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function AdminDonationAlreadyAssign() {\r\n  const [donorDonationDetails, setDonorDonationDetails] = useState([]);\r\n  const adminObj = JSON.parse(localStorage.getItem(\"admin\"));\r\n  const navigate = useNavigate();\r\n\r\n  async function fetchDonorDonationData() {\r\n    const response = await getAssignedDonationDetails();\r\n    console.log(\"donor donation data\");\r\n    console.log(response.data);\r\n    setDonorDonationDetails(response.data);\r\n  }\r\n\r\n  //for fetching the initial data\r\n  useEffect(() => {\r\n    console.log(\"inside\" + adminObj);\r\n    if (adminObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchDonorDonationData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AdminNavigationBar></AdminNavigationBar>\r\n      <Container className=\"mt-4 mb-4 text-center\">\r\n        <Alert className=\"bg-primary text-white shadow-lg\">\r\n          <h3 className=\"mb-0\">\r\n            List of Volunteers Assigned to Collect Donations\r\n          </h3>\r\n        </Alert>\r\n      </Container>\r\n\r\n      <Container\r\n        style={{ minHeight: \"380px\" }}\r\n        className=\"mt-4 mb-4 text-center\"\r\n      >\r\n        {\" \"}\r\n        <Table className=\"table-bordered shadow-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Serial ID</th>\r\n              <th>Donor Assigned</th>\r\n              <th>Volunteer Assigned</th>\r\n              <th>recipient Assigned</th>\r\n              <th>Donation Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {donorDonationDetails.map((dd, index) => {\r\n              return (\r\n                <tr key={dd.donationId}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{dd.donor.donorName}</td>\r\n                  <td>{dd.volunteer.volunteerName}</td>\r\n                  <td>{dd.recipient.recipientName}</td>\r\n                  <td>\r\n                    {dd.donationStatus == \"isCollected\"\r\n                      ? \"Donation is collected\"\r\n                      : dd.donationStatus == \"toBeCollected\"\r\n                      ? \"Donation to be collected\"\r\n                      : \"Donation is delivered\"}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientEditProfile.js",["281","282"],[],"import { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getRecipientFromServer,\r\n  saveRecipient,\r\n} from \"../../services/RecipientApiService\";\r\nimport { RecipientNavigationBar } from \"./RecipientNavigationBar\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport function RecipientEditProfile() {\r\n  const [recipientDetails, setRecipientDetails] = useState({});\r\n  const recipientObj = JSON.parse(localStorage.getItem(\"recipient\"));\r\n  const navigate = useNavigate();\r\n\r\n  //for error State\r\n  const [recipientNameError, setReipientNameError] = useState(\"\");\r\n  const [recipientPhoneError, setReipientPhoneError] = useState(\"\");\r\n  const [recipientPasswordError, setReipientPasswordError] = useState(\"\");\r\n  const [confirmrecipientPasswordError, setConfirmrecipientPasswordError] =\r\n    useState(\"\");\r\n  const [recipientZipCodeError, setReipientZipCodeError] = useState(\"\");\r\n  const [recipientAddressError, setRecipientAddressError] = useState(\"\");\r\n  const [recipientRegistrationIdError, setRecipientRegistrationIdError] =\r\n    useState(\"\");\r\n\r\n  async function fetchRecipientDetails() {\r\n    const response = await getRecipientFromServer(recipientObj.recipientId);\r\n    if (response.status === 200) {\r\n      const updatedRecipientDetails = {\r\n        ...response.data,\r\n        recipientPassword: \"\",\r\n        recipientConfirmPassword: \"\",\r\n      };\r\n      setRecipientDetails(updatedRecipientDetails);\r\n    }\r\n  }\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    if (recipientObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchRecipientDetails();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setRecipientDetails({\r\n      ...recipientDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Define function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validate form inputs\r\n    if (!validate()) {\r\n      return;\r\n    } else {\r\n      const formData = {\r\n        ...recipientDetails,\r\n        recipientName: recipientDetails.recipientName,\r\n        recipientPhone: recipientDetails.recipientPhone,\r\n        recipientPassword: recipientDetails.recipientPassword,\r\n        recipientAddress: recipientDetails.recipientAddress,\r\n        recipientZipCode: recipientDetails.recipientZipCode,\r\n        recipientRegistrationId: recipientDetails.recipientRegistrationId,\r\n      };\r\n\r\n      const response = await saveRecipient(formData);\r\n      console.log(response.data);\r\n      if (response.status === 200) {\r\n        navigate(\"/recipientProfile\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //validation of field\r\n  const validate = () => {\r\n    let isValid = true;\r\n    // recipientName validation\r\n    if (recipientDetails.recipientName.trim() === \"\") {\r\n      setReipientNameError(\"recipient Name is required\");\r\n      isValid = false;\r\n      //vipul1\r\n    } else if (!/^[a-zA-Z\\s]+$/.test(recipientDetails.recipientName)) {\r\n      setReipientNameError(\"recipient name can only contain letters\");\r\n      isValid = false;\r\n    } else {\r\n      setReipientNameError(\"\");\r\n    }\r\n\r\n     // recipientPhone validation\r\n     if (recipientDetails.recipientPhone.trim() === \"\") {\r\n      setReipientPhoneError(\"recipient Phone number is required\");\r\n      isValid = false;\r\n    } else if (!/^[6-9]{1}[0-9]{9}$/.test(recipientDetails.recipientPhone)) {\r\n      setReipientPhoneError(\"recipient Phone number can only contain numbers and start with (6-9)\");\r\n      isValid = false;\r\n    } else if (recipientDetails.recipientPhone.length !== 10) {\r\n      setReipientPhoneError(\"recipient Phone number must be 10 digit\");\r\n      isValid = false;\r\n    } else {\r\n      setReipientPhoneError(\"\");\r\n    }\r\n\r\n    // Recipient ZIP code validation\r\n    if (!/^4[0-4]\\d{4}$/.test(recipientDetails.recipientZipCode.trim())) {\r\n      setReipientZipCodeError(\"Please enter a valid 6-digit ZIP code  and for mh first 2 digit (40-44)\");\r\n    } else {\r\n      setReipientZipCodeError(\"\");\r\n    }\r\n\r\n    // Recipient Address validation\r\n    if (!recipientDetails.recipientAddress.trim()) {\r\n      setRecipientAddressError(\"Recipient Address is required\");\r\n      isValid = false;\r\n    } else {\r\n      setRecipientAddressError(\"\");\r\n    }\r\n\r\n    // recipientRegistrationId validation\r\n    if (recipientDetails.recipientRegistrationId.trim() === \"\") {\r\n      setRecipientRegistrationIdError(\"recipient registrationId is required\");\r\n      isValid = false;\r\n    } else if (!/^[0-9]+$/.test(recipientDetails.recipientRegistrationId)) {\r\n      setRecipientRegistrationIdError(\r\n        \"recipient registrationId can only contain numbers\"\r\n      );\r\n      isValid = false;\r\n    } else if (recipientDetails.recipientRegistrationId.length !== 10) {\r\n      setRecipientRegistrationIdError(\r\n        \"recipient RegistrationId must be 10 digit\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setRecipientRegistrationIdError(\"\");\r\n    }\r\n\r\n    // password validation\r\n    if (recipientDetails.recipientPassword.trim() === \"\") {\r\n      setReipientPasswordError(\"recipient Password is required\");\r\n      isValid = false;\r\n    } else if (recipientDetails.recipientPassword.length < 8) {\r\n      setReipientPasswordError(\r\n        \"recipientPassword must be at least 8 characters long\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setReipientPasswordError(\"\");\r\n    }\r\n\r\n    // Confirm password validation\r\n    if (recipientDetails.recipientConfirmPassword.trim() === \"\") {\r\n      setConfirmrecipientPasswordError(\r\n        \"confirm recipient Password is required\"\r\n      );\r\n      isValid = false;\r\n    } else if (\r\n      recipientDetails.recipientPassword !==\r\n      recipientDetails.recipientConfirmPassword\r\n    ) {\r\n      setConfirmrecipientPasswordError(\"Password Not Matched\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmrecipientPasswordError(\"\");\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  if (recipientDetails.kycverified) {\r\n    return (\r\n      <>\r\n        <RecipientNavigationBar\r\n          status={recipientDetails.kycverified}\r\n        ></RecipientNavigationBar>\r\n        <Container className=\"mt-3 mb-3\">\r\n          <Card\r\n            className=\"shadow-lg p-5 mx-auto\"\r\n            style={{ width: \"75%\", height: \"50%\" }}\r\n          >\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md={{ span: 6 }}>\r\n                <h3 className=\"text-center mb-3\">Edit Profile</h3>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter name\"\r\n                      name=\"recipientName\"\r\n                      value={recipientDetails.recipientName}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {recipientNameError && (\r\n                      <span style={{ color: \"red\" }}>{recipientNameError}</span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label> Recipient Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter phone\"\r\n                      name=\"recipientPhone\"\r\n                      value={recipientDetails.recipientPhone}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {recipientPhoneError && (\r\n                      <span style={{ color: \"red\" }}>\r\n                        {recipientPhoneError}\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Enter Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter address\"\r\n                      name=\"recipientAddress\"\r\n                      value={recipientDetails.recipientAddress}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {recipientAddressError && (\r\n                      <span style={{ color: \"red\" }}>\r\n                        {recipientAddressError}\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label> Enter RegistrationId</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter RegistrationId\"\r\n                      name=\"recipientRegistrationId\"\r\n                      value={recipientDetails.recipientRegistrationId}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {recipientRegistrationIdError && (\r\n                      <span style={{ color: \"red\" }}>\r\n                        {recipientRegistrationIdError}\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Enter ZIP Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter ZIP code\"\r\n                      name=\"recipientZipCode\"\r\n                      value={recipientDetails.recipientZipCode}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {recipientZipCodeError && (\r\n                      <span style={{ color: \"red\" }}>\r\n                        {recipientZipCodeError}\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Enter Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      name=\"recipientPassword\"\r\n                      value={recipientDetails.recipientPassword}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {recipientPasswordError && (\r\n                      <span style={{ color: \"red\" }}>\r\n                        {recipientPasswordError}\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      name=\"recipientConfirmPassword\"\r\n                      value={recipientDetails.recipientConfirmPassword}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {confirmrecipientPasswordError && (\r\n                      <span style={{ color: \"red\" }}>\r\n                        {confirmrecipientPasswordError}\r\n                      </span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Button type=\"submit\" variant=\"primary\">\r\n                    Update Profile\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    navigate(\"/recipientHome\");\r\n  }\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientRequestLandingPage.js",["283"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientRequestDetails.js",["284","285"],[],"import { useEffect, useState } from \"react\";\r\nimport { Alert, Card, Container, Table } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getRecipientFromServer } from \"../../services/RecipientApiService\";\r\nimport { RecipientNavigationBar } from \"./RecipientNavigationBar\";\r\n\r\nexport function RecipientRequestDetails() {\r\n  const [recipientDetails, setRecipientDetails] = useState({});\r\n  const recipientObj = JSON.parse(localStorage.getItem(\"recipient\"));\r\n  const navigate = useNavigate();\r\n\r\n  async function fetchRecipientDetails() {\r\n    const response = await getRecipientFromServer(recipientObj.recipientId);\r\n    console.log(response.data);\r\n    setRecipientDetails(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recipientObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchRecipientDetails();\r\n  }, []);\r\n\r\n  if (recipientDetails.kycverified) {\r\n    return (\r\n      <>\r\n        <RecipientNavigationBar\r\n          status={recipientDetails.kycverified}\r\n        ></RecipientNavigationBar>\r\n        <Container\r\n          className=\"mt-4 mb-4 text-center\"\r\n          style={{ minHeight: \"62vh\", marginBottom: \"5rem\" }}\r\n        >\r\n          <h3 className=\"text-primary mb-3\">\r\n            Table for the recipient made donation requests\r\n          </h3>\r\n          <Card className=\"shadow-lg p-3 mb-5 bg-body rounded\">\r\n            <Table responsive striped bordered hover>\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th colSpan=\"3\">Quantity Required</th>\r\n                  <th colSpan=\"3\">Quantity Received</th>\r\n                </tr>\r\n                <tr className=\"text-center\">\r\n                  <th>Raw Food</th>\r\n                  <th>Clothes</th>\r\n                  <th>Stationary</th>\r\n                  <th>Raw Food</th>\r\n                  <th>Clothes</th>\r\n                  <th>Stationary</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr className=\"text-center\">\r\n                  <td>{recipientDetails.rawFoodQuantityRequired}</td>\r\n                  <td>{recipientDetails.clothesQuantityRequired}</td>\r\n                  <td>{recipientDetails.stationaryQuantityRequired}</td>\r\n                  <td>{recipientDetails.rawFoodQuantityReceived}</td>\r\n                  <td>{recipientDetails.clothesQuantityReceived}</td>\r\n                  <td>{recipientDetails.stationaryQuantityReceived}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Card>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    navigate(\"/recipientHome\");\r\n  }\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientHome.js",["286","287","288"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientProfile.js",["289"],[],"import { useEffect, useState } from \"react\";\r\nimport { Table, Card, Button, Container, Row, Image, Col } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getRecipientFromServer } from \"../../services/RecipientApiService\";\r\nimport { RecipientNavigationBar } from \"./RecipientNavigationBar\";\r\n\r\nexport function RecipientProfile() {\r\n  const [recipientDetails, setRecipientDetails] = useState({});\r\n  const recipientObj = JSON.parse(localStorage.getItem(\"recipient\"));\r\n  const navigate = useNavigate();\r\n\r\n  async function fetchRecipientDetails() {\r\n    const response = await getRecipientFromServer(recipientObj.recipientId);\r\n    //console.log(response.data);\r\n    setRecipientDetails(response.data);\r\n  }\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    if (recipientObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchRecipientDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <RecipientNavigationBar\r\n        status={recipientDetails.kycverified}\r\n      ></RecipientNavigationBar>\r\n       <Container className=\"mt-1 mb-2\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Card className=\"shadow-lg p-5\">\r\n            <h1 className=\"text-center mb-5\">User Profile</h1>\r\n            <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n              <Image src={\"https://www.freeiconspng.com/thumbs/profile-icon-png/am-a-19-year-old-multimedia-artist-student-from-manila--21.png\"} roundedCircle className=\"mr-3\" width={100} height={100} />\r\n            </div>\r\n            <Table responsive striped bordered hover>\r\n              <tbody>\r\n                <tr>\r\n                  <th style={{ width: \"30%\" }}>Name</th>\r\n                  <td>{recipientDetails.recipientName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Recipient Number</th>\r\n                  <td>{recipientDetails.recipientPhone}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <td>{recipientDetails.recipientEmail}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Registration ID</th>\r\n                  <td>{recipientDetails.recipientRegistrationId}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Recipient Address</th>\r\n                  <td>{recipientDetails.recipientAddress}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Recipient ZIP code</th>\r\n                  <td>{recipientDetails.recipientZipCode}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n              {/* {recipientDetails.kycverified && <Link to={\"/recipientEditProfile\"}>Edit Profile</Link>} */}\r\n              {recipientDetails.kycverified && (\r\n                <Link to={\"/recipientEditProfile\"}>\r\n                  <Button className=\"mt-3\" variant=\"primary\">\r\n                    Edit Profile\r\n                  </Button>\r\n                </Link>\r\n\r\n              )}\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerRegistrationForm.js",["290","291"],[],"import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row, Modal } from \"react-bootstrap\";\r\nimport { saveVolunteer } from \"../../services/VolunteerApiService\";\r\nimport { NavigationBar } from \"../NavigationBar\";\r\nimport Footer from \"./Footer\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nexport function VolunteerRegistrationForm() {\r\n  // Define state for form inputs and errors\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [volunteerDetails, setVolunteerDetails] = useState({\r\n    volunteerName: \"\",\r\n    volunteerPhone: \"\",\r\n    volunteerAlternatePhone: \"\",\r\n    volunteerEmail: \"\",\r\n    volunteerPassword: \"\",\r\n    volunteerConfirmPassword: \"\",\r\n    volunteerZipCode: \"\",\r\n    volunteerAge: \"\",\r\n  });\r\n\r\n  //for error State\r\n  const [volunteerNameError, setVolunteerNameError] = useState(\"\");\r\n  const [volunteerPhoneError, setVolunteerPhoneError] = useState(\"\");\r\n  const [volunteerAlternatePhoneError, setVolunteerAlternatePhoneError] =\r\n    useState(\"\");\r\n  const [volunteerEmailError, setVolunteerEmailError] = useState(\"\");\r\n  const [volunteerPasswordError, setVolunteerPasswordError] = useState(\"\");\r\n  const [confirmVolunteerPasswordError, setConfirmVolunteerPasswordError] =\r\n    useState(\"\");\r\n  const [volunteerZipCodeError, setVolunteerZipCodeError] = useState(\"\");\r\n  const [volunteerAgeError, setVolunteerAgeError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setVolunteerDetails({\r\n      ...volunteerDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const sendEmail = (formData) => {\r\n    emailjs\r\n      .send(\r\n        \"service_iwmii1r\",\r\n        \"template_8yummw1\",\r\n        {\r\n          from_name: \"CharityXchange\",\r\n          to_name: formData.donorName,\r\n          email: formData.donorEmail,\r\n        },\r\n\r\n        \"nIhHAx-RhF227btcV\"\r\n      )\r\n\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  };\r\n\r\n  // Define function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validate form inputs\r\n    if (!validate()) {\r\n      return;\r\n    } else {\r\n      const formData = {\r\n        volunteerName: volunteerDetails.volunteerName,\r\n        volunteerPhone: volunteerDetails.volunteerPhone,\r\n        volunteerAlternatePhone: volunteerDetails.volunteerAlternatePhone,\r\n        volunteerEmail: volunteerDetails.volunteerEmail.toLowerCase(),\r\n        volunteerPassword: volunteerDetails.volunteerPassword,\r\n        volunteerZipCode: volunteerDetails.volunteerZipCode,\r\n        volunteerAge: volunteerDetails.volunteerAge,\r\n      };\r\n      // try {\r\n      //   const response = await saveVolunteer(formData);\r\n      const response = await saveVolunteer(formData);\r\n      console.log(response.data);\r\n      if (response.status === 200) {\r\n        if(response.data != \"email id present\"){\r\n          sendEmail(formData);\r\n          setVolunteerDetails({\r\n            volunteerName: \"\",\r\n            volunteerPhone: \"\",\r\n            volunteerAlternatePhone: \"\",\r\n            volunteerEmail: \"\",\r\n            volunteerZipCode: \"\",\r\n            volunteerPassword: \"\",\r\n            volunteerConfirmPassword: \"\",\r\n            volunteerAge: \"\",\r\n        });\r\n        setModalOpen(true);\r\n        }\r\n        else{\r\n          setVolunteerEmailError(\"Email already registered. Please login or use different email for registration\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //validation of field\r\n  const validate = () => {\r\n    let isValid = true;\r\n    // volunteerName validation\r\n    if (volunteerDetails.volunteerName.trim() === \"\") {\r\n      setVolunteerNameError(\"Name is required\");\r\n      isValid = false;\r\n    } else if (!/^[a-zA-Z\\s]+$/.test(volunteerDetails.volunteerName)) {\r\n      setVolunteerNameError(\"Name can only contain letters\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerNameError(\"\");\r\n    }\r\n\r\n    // volunteerPhone validation\r\n    if (volunteerDetails.volunteerPhone.trim() === \"\") {\r\n      setVolunteerPhoneError(\"Phone number is required\");\r\n      isValid = false;\r\n    } else if (!/^[6-9]{1}[0-9]{9}$/.test(volunteerDetails.volunteerPhone)) {\r\n      setVolunteerPhoneError(\"Phone number can only contain numbers and of 10 digits and first digit(6-9)\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerPhoneError(\"\");\r\n    }\r\n\r\n    // volunteerAlternatePhone validation\r\n    if (volunteerDetails.volunteerAlternatePhone.trim() === \"\") {\r\n      //dont do anything, allow it\r\n    } else if (!/^[0-9]+$/.test(volunteerDetails.volunteerAlternatePhone)) {\r\n      setVolunteerAlternatePhoneError(\r\n        \"Phone number can only contain numbers\"\r\n      );\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerAlternatePhone.length !== 10) {\r\n      setVolunteerAlternatePhoneError(\r\n        \"Phone number must be 10 digit\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerAlternatePhoneError(\"\");\r\n    }\r\n\r\n    // VolunteerEmail validation\r\n    if (volunteerDetails.volunteerEmail.trim() === \"\") {\r\n      setVolunteerEmailError(\"Email is required\");\r\n      isValid = false;\r\n    } else if (\r\n      !/^[a-z]{1}[a-z0-9]{0,}@[a-z]{1,}\\.[a-z]{1,}$/i.test(volunteerDetails.volunteerEmail)\r\n    ) {\r\n      setVolunteerEmailError(\"Email is not valid\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerEmailError(\"\");\r\n    }\r\n\r\n    // Volunteer ZIP code validation\r\n    if (volunteerDetails.volunteerZipCode.trim() === \"\") {\r\n      setVolunteerZipCodeError(\"ZIP code is required\");\r\n      isValid = false;\r\n    } else if (!/^4[0-4]\\d{4}$/.test(volunteerDetails.volunteerZipCode)) {\r\n      setVolunteerZipCodeError(\"Please enter a valid 6-digit ZIP code and for mh first 2 digit (40-44)\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerZipCodeError(\"\");\r\n    }\r\n\r\n    // Volunteer age validation\r\n    if (volunteerDetails.volunteerAge.trim() === \"\") {\r\n      setVolunteerAgeError(\"Age is required\");\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerAge < 18 && volunteerDetails.volunteerAge > 80) {\r\n      setVolunteerAgeError(\"Age should be greater than or equal to 18\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerAgeError(\"\");\r\n    }\r\n\r\n    // password validation\r\n    if (volunteerDetails.volunteerPassword.trim() === \"\") {\r\n      setVolunteerPasswordError(\"Password is required\");\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerPassword.length < 8) {\r\n      setVolunteerPasswordError(\r\n        \"Password must be at least 8 characters long\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerPasswordError(\"\");\r\n    }\r\n    // Confirm password validation\r\n    if (volunteerDetails.volunteerConfirmPassword.trim() === \"\") {\r\n      setConfirmVolunteerPasswordError(\r\n        \"confirm Password is required\"\r\n      );\r\n      isValid = false;\r\n    } else if (\r\n      volunteerDetails.volunteerPassword !==\r\n      volunteerDetails.volunteerConfirmPassword\r\n    ) {\r\n      setConfirmVolunteerPasswordError(\"Password Not Matched\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmVolunteerPasswordError(\"\");\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavigationBar></NavigationBar>\r\n      <Container className=\"mt-4 shadow p-4 bg-light h-500 mb-4\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1 className=\"text-center mb-4 text-primary\">\r\n            Volunteer Registration Form\r\n          </h1>\r\n          <Row>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Volunteer Name:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  name=\"volunteerName\"\r\n                  value={volunteerDetails.volunteerName}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerNameError && (\r\n                  <span style={{ color: \"red\" }}>{volunteerNameError} </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Volunteer Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"volunteerEmail\"\r\n                  value={volunteerDetails.volunteerEmail}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerEmailError && (\r\n                  <span style={{ color: \"red\" }}>{volunteerEmailError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label> Volunteer Phone Number:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter phone\"\r\n                  name=\"volunteerPhone\"\r\n                  value={volunteerDetails.volunteerPhone}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerPhoneError && (\r\n                  <span style={{ color: \"red\" }}>{volunteerPhoneError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  {\" \"}\r\n                  Volunteer Alternate Phone Number: (optional)\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter alternate phone\"\r\n                  name=\"volunteerAlternatePhone\"\r\n                  value={volunteerDetails.volunteerAlternatePhone}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerAlternatePhoneError && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {volunteerAlternatePhoneError}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Volunteer ZIP Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter ZIP code\"\r\n                  name=\"volunteerZipCode\"\r\n                  value={volunteerDetails.volunteerZipCode}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerZipCodeError && (\r\n                  <span style={{ color: \"red\" }}>{volunteerZipCodeError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Volunteer Age</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter age\"\r\n                  name=\"volunteerAge\"\r\n                  value={volunteerDetails.volunteerAge}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerAgeError && (\r\n                  <span style={{ color: \"red\" }}>{volunteerAgeError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Volunteer Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  name=\"volunteerPassword\"\r\n                  value={volunteerDetails.volunteerPassword}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {volunteerPasswordError && (\r\n                  <span style={{ color: \"red\" }}>{volunteerPasswordError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Confirm Volunteer Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"volunteerConfirmPassword\"\r\n                  value={volunteerDetails.volunteerConfirmPassword}\r\n                  onChange={handleChange}\r\n                  className=\"rounded-0\"\r\n                />\r\n                {confirmVolunteerPasswordError && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {confirmVolunteerPasswordError}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"success\"\r\n            className=\"rounded-pill bg-primary\"\r\n          >\r\n            Register Volunteer\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <Modal show={modalOpen} onHide={() => setModalOpen(false)}>\r\n        <Modal.Header>\r\n          <Modal.Title>Success</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Volunteer registered successfully!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => setModalOpen(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerDonationDetails.js",["292"],[],"import { useEffect, useState } from \"react\";\r\nimport { getVolunteerDonationDetails } from \"../../services/DonationApiService\";\r\nimport { Alert, Container, Table } from \"react-bootstrap\";\r\nimport { VolunteerNavigationBar } from \"./VolunteerNavigationBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function VolunteerDonationDetails(){\r\n\r\n    const [ donorDonationDetails, setDonorDonationDetails ] = useState([]);\r\n    const volunteerObj = JSON.parse(localStorage.getItem(\"volunteer\"));\r\n    const navigate = useNavigate();\r\n\r\n    const fetchData = async () => {\r\n        const response = await getVolunteerDonationDetails(volunteerObj.volunteerId);\r\n        console.log(response.data);\r\n        setDonorDonationDetails( response.data );\r\n    }\r\n\r\n    useEffect( () =>{\r\n        if(volunteerObj == null){\r\n            navigate(\"/\");\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <VolunteerNavigationBar></VolunteerNavigationBar>\r\n            <Container className=\"mt-4 mb-4 text-center\">\r\n                <Alert>\r\n                Donation to be collected by volunteers\r\n                </Alert>\r\n            </Container>\r\n\r\n            <Container>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DonationId</th>\r\n                            <th>RawFoodQuantity</th>\r\n                            <th>ClothesQuantity</th>\r\n                            <th>StationaryQuantity</th>\r\n                            <th>DonorName</th>\r\n                            <th>DonorContactDetails</th>\r\n                            <th>DonorAddress</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            donorDonationDetails.map((dd) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{dd.donationId}</td>\r\n                                        <td>{dd.rawFoodQuantity}</td>\r\n                                        <td>{dd.clothesQuantity}</td>\r\n                                        <td>{dd.stationaryQuantity}</td>\r\n                                        <td>{dd.donor.donorName}</td>\r\n                                        <td>{dd.donor.donorPhone}</td>\r\n                                        <td>~Donor Address!</td>\r\n\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </>\r\n    )\r\n}","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerDonationToBeCollected.js",["293"],[],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  getVolunteerDonationDetailsToBeCollected,\r\n  updateDonorDonationDetail,\r\n} from \"../../services/DonationApiService\";\r\nimport { Alert, Button, Container, Table } from \"react-bootstrap\";\r\nimport { VolunteerNavigationBar } from \"./VolunteerNavigationBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function VolunteerDonationToBeCollected() {\r\n  const [donorDonationDetails, setDonorDonationDetails] = useState([]);\r\n  const volunteerObj = JSON.parse(localStorage.getItem(\"volunteer\"));\r\n  const navigate = useNavigate();\r\n\r\n  const fetchDonorDonationData = async () => {\r\n    const response = await getVolunteerDonationDetailsToBeCollected(\r\n      volunteerObj.volunteerId\r\n    );\r\n    //tobecollected data 1st page;\r\n\r\n    setDonorDonationDetails(response.data);\r\n    console.log(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (volunteerObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchDonorDonationData();\r\n  }, []);\r\n\r\n  function handleChange(e, donorDonationObj) {\r\n    donorDonationObj.donationStatus = e.target.value;\r\n  }\r\n\r\n  async function saveChanges(donorDonationObj) {\r\n    const response = await updateDonorDonationDetail(donorDonationObj);\r\n    console.log(response.data);\r\n    //fetching updated details into state\r\n    fetchDonorDonationData();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <VolunteerNavigationBar></VolunteerNavigationBar>\r\n      <Container style={{ minHeight: \"488px\" }}>\r\n        <Container className=\"mt-4 mb-4 text-center\">\r\n          <Alert className=\"bg-primary text-white shadow-lg\">\r\n            <h3 className=\"mb-0\">Donation to be collected</h3>\r\n          </Alert>\r\n        </Container>\r\n        <Container className=\"p-3 border border-primary rounded\">\r\n          <Table responsive striped bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Serial ID</th>\r\n                <th>Donor Name</th>\r\n                <th>Donor Contact Details</th>\r\n                <th>Donor Address</th>\r\n                <th>Donor ZIP Code</th>\r\n                <th>Donation Status</th>\r\n                <th>Click To Update</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {donorDonationDetails.map((dd, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{dd.donor.donorName}</td>\r\n                    <td>{dd.donor.donorPhone}</td>\r\n                    <td>{dd.donor.donorAddress}</td>\r\n                    <td>{dd.donor.donorZipCode}</td>\r\n                    <td>\r\n                      <select\r\n                        className=\"form-select\"\r\n                        name=\"donationStatus\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          handleChange(e, dd);\r\n                        }}\r\n                      >\r\n                        <option value=\"toBeCollected\">\r\n                          Donation To Be Collected\r\n                        </option>\r\n                        <option value=\"isCollected\">\r\n                          Donation is Collected\r\n                        </option>\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => saveChanges(dd)}\r\n                        className=\"btn-sm  btn-primary\"\r\n                      >\r\n                        Save\r\n                      </Button>{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerHome.js",["294","295","296"],[],"import { useEffect } from \"react\";\r\nimport { Alert, Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { VolunteerNavigationBar } from \"./VolunteerNavigationBar\";\r\n\r\nexport function VolunteerHome() {\r\n  const volunteerObj = JSON.parse(localStorage.getItem(\"volunteer\"));\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (volunteerObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VolunteerNavigationBar></VolunteerNavigationBar>\r\n      <Container className=\"mt-5 mb-5\" style={{ minHeight: \"420px\" }}>\r\n        <Row className=\"justify-content-center align-items-center\">\r\n          <Col xs={12} md={8} lg={6} className=\"text-center\">\r\n            <h1 className=\"mb-4 text-primary\">Thank You, Volunteer!</h1>\r\n            <p className=\"mt-4\" style={{ fontFamily: \"Roboto, sans-serif\" }}>\r\n              Your help is essential in making a positive impact on our\r\n              community. By using our platform, you can see the details of the\r\n              donations that need to be collected, verify them, and deliver them\r\n              to assigned recipients.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-5\">\r\n          <Col xs={12} md={6} lg={4} className=\"text-center\">\r\n            <Card className=\"shadow-lg\">\r\n              <Card.Body>\r\n                <Card.Title>View Donations</Card.Title>\r\n                <Card.Text>\r\n                  Browse through the list of donations that need to be collected\r\n                  and delivered.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} md={6} lg={4} className=\"text-center\">\r\n            <Card className=\"shadow-lg\">\r\n              <Card.Body>\r\n                <Card.Title>Verify Donations</Card.Title>\r\n                <Card.Text>\r\n                  Make sure that the donations you collect are in good condition\r\n                  and match the details listed in the platform.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} md={6} lg={4} className=\"text-center\">\r\n            <Card className=\"shadow-lg\">\r\n              <Card.Body>\r\n                <Card.Title>Deliver Donations</Card.Title>\r\n                <Card.Text>\r\n                  Deliver the donations to the assigned recipients and make a\r\n                  difference in their lives.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerDonationIsCollected.js",["297"],[],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  getVolunteerDonationDetailsIsCollected,\r\n  updateDonorDonationDetail,\r\n} from \"../../services/DonationApiService\";\r\nimport { Alert, Button, Container, Table } from \"react-bootstrap\";\r\nimport { VolunteerNavigationBar } from \"./VolunteerNavigationBar\";\r\nimport { updateRecipientRecievedDonationDetails } from \"../../services/RecipientApiService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function VolunteerDonationIsCollected() {\r\n  const [donorDonationDetails, setDonorDonationDetails] = useState([]);\r\n  const volunteerObj = JSON.parse(localStorage.getItem(\"volunteer\"));\r\n  const navigate = useNavigate();\r\n\r\n  const fetchDonorDonationData = async () => {\r\n    const response = await getVolunteerDonationDetailsIsCollected(\r\n      volunteerObj.volunteerId\r\n    );\r\n    setDonorDonationDetails(response.data);\r\n    console.log(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (volunteerObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchDonorDonationData();\r\n  }, []);\r\n\r\n  function handleChange(e, donorDonationObj) {\r\n    donorDonationObj.donationStatus = e.target.value;\r\n  }\r\n\r\n  async function saveChanges(donorDonationObj) {\r\n    const response = await updateDonorDonationDetail(donorDonationObj);\r\n    console.log(response.data);\r\n    //fetching updated details into state\r\n\r\n    updateRecipientRecievedDonationDetails(donorDonationObj);\r\n    fetchDonorDonationData();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <VolunteerNavigationBar></VolunteerNavigationBar>\r\n      <Container style={{ minHeight: \"488px\" }}>\r\n        <Container className=\"mt-4 mb-4 text-center\">\r\n          <Alert className=\"bg-primary text-white shadow-lg\">\r\n            <h3 className=\"mb-0\">Donation to be delivered by the Volunteer</h3>\r\n          </Alert>\r\n        </Container>\r\n        <Container className=\"p-3 border border-primary rounded\">\r\n          <Table responsive striped bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>Serial ID</th>\r\n                <th>Recipient Name</th>\r\n                <th>Recipient Contact Details</th>\r\n                <th>Recipient Address</th>\r\n                <th>Recipient ZIP Code</th>\r\n                <th>Donation Status</th>\r\n                <th>Click To Update</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {donorDonationDetails.map((dd, index) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{dd.recipient.recipientName}</td>\r\n                    <td>{dd.recipient.recipientPhone}</td>\r\n                    <td>{dd.recipient.recipientAddress}</td>\r\n                    <td>{dd.recipient.recipientZipCode}</td>\r\n                    <td>\r\n                      <select\r\n                        className=\"form-select\"\r\n                        name=\"donationStatus\"\r\n                        required\r\n                        onChange={(e) => {\r\n                          handleChange(e, dd);\r\n                        }}\r\n                      >\r\n                        <option value=\"isCollected\">\r\n                          Donation is Collected\r\n                        </option>\r\n                        <option value=\"isDelivered\">\r\n                          Donation is Delivered\r\n                        </option>\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => saveChanges(dd)}\r\n                        className=\"btn-sm\"\r\n                      >\r\n                        Save\r\n                      </Button>{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerProfile.js",["298"],[],"import { useEffect, useState } from \"react\";\r\nimport { Table, Container, Card, Button, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getVolunteerFromServer } from \"../../services/VolunteerApiService\";\r\nimport { VolunteerNavigationBar } from \"./VolunteerNavigationBar\";\r\n\r\nexport function VolunteerProfile() {\r\n  const [volunteerDetails, setVolunteerDetails] = useState({});\r\n  const volunteerObj = JSON.parse(localStorage.getItem(\"volunteer\"));\r\n  const navigate = useNavigate();\r\n\r\n  const getVolunteerDetails = async () => {\r\n    const response = await getVolunteerFromServer(volunteerObj.volunteerId);\r\n    if (response.status === 200) {\r\n      setVolunteerDetails(response.data);\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    if (volunteerObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    getVolunteerDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VolunteerNavigationBar></VolunteerNavigationBar>\r\n      <Container className=\"mt-1 mb-2\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n        <Card className=\"shadow-lg p-5\">\r\n          <h1 className=\"text-center mb-5\">User Profile</h1>\r\n          <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n          <Image src={\"https://www.freeiconspng.com/thumbs/profile-icon-png/am-a-19-year-old-multimedia-artist-student-from-manila--21.png\"} roundedCircle className=\"mr-3\" width={100} height={100} />\r\n          </div>\r\n          <Table responsive striped bordered hover>\r\n            <tbody>\r\n              <tr>\r\n                <th>Name</th>\r\n                <td>{volunteerDetails.volunteerName}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Age</th>\r\n                <td>{volunteerDetails.volunteerAge}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Phone Number</th>\r\n                <td>{volunteerDetails.volunteerPhone}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Alternate Phone Number</th>\r\n                <td>{volunteerDetails.volunteerAlternatePhone || \"--\"}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Email</th>\r\n                <td>{volunteerDetails.volunteerEmail}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>ZipCode</th>\r\n                <td>{volunteerDetails.volunteerZipCode}</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n          <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n          <Link to={\"/volunteerEditProfile\"}>\r\n            <Button className=\"mt-3\" variant=\"primary\">\r\n              Edit Profile\r\n            </Button>\r\n            </Link>\r\n          </div>\r\n         \r\n        </Card>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerEditProfile.js",["299","300"],[],"import { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getVolunteerFromServer,\r\n  saveVolunteer,\r\n  updateVolunteer,\r\n} from \"../../services/VolunteerApiService\";\r\nimport { VolunteerNavigationBar } from \"./VolunteerNavigationBar\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport function VolunteerEditProfile() {\r\n  const [volunteerDetails, setVolunteerDetails] = useState({});\r\n  const volunteerObj = JSON.parse(localStorage.getItem(\"volunteer\"));\r\n  const navigate = useNavigate();\r\n\r\n  //for error State\r\n  const [volunteerNameError, setVolunteerNameError] = useState(\"\");\r\n  const [volunteerPhoneError, setVolunteerPhoneError] = useState(\"\");\r\n  const [volunteerAlternatePhoneError, setVolunteerAlternatePhoneError] =\r\n    useState(\"\");\r\n  const [volunteerPasswordError, setVolunteerPasswordError] = useState(\"\");\r\n  const [confirmVolunteerPasswordError, setConfirmVolunteerPasswordError] =\r\n    useState(\"\");\r\n  const [volunteerZipCodeError, setVolunteerZipCodeError] = useState(\"\");\r\n  const [volunteerAgeError, setVolunteerAgeError] = useState(\"\");\r\n\r\n  async function getVolunteerDetails() {\r\n    const response = await getVolunteerFromServer(volunteerObj.volunteerId);\r\n    if (response.status === 200) {\r\n      const updatedVolunteerDetails = {\r\n        ...response.data,\r\n        volunteerPassword: \"\",\r\n        volunteerConfirmPassword: \"\",\r\n      };\r\n      setVolunteerDetails(updatedVolunteerDetails);\r\n      console.log(volunteerDetails);\r\n    }\r\n  }\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    if (volunteerObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    getVolunteerDetails();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setVolunteerDetails({\r\n      ...volunteerDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Define function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validate form inputs\r\n    if (!validate()) {\r\n      return;\r\n    } else {\r\n      const formData = {\r\n        ...volunteerDetails,\r\n        volunteerName: volunteerDetails.volunteerName,\r\n        volunteerPhone: volunteerDetails.volunteerPhone,\r\n        volunteerAlternatePhone: volunteerDetails.volunteerAlternatePhone,\r\n        volunteerPassword: volunteerDetails.volunteerPassword,\r\n        volunteerZipCode: volunteerDetails.volunteerZipCode,\r\n        volunteerAge: volunteerDetails.volunteerAge,\r\n      };\r\n\r\n      const response = await updateVolunteer(formData);\r\n      console.log(response.data);\r\n      if (response.status === 200) {\r\n        navigate(\"/volunteerProfile\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //validation of field\r\n  const validate = () => {\r\n    let isValid = true;\r\n    // volunteerName validation\r\n    if (volunteerDetails.volunteerName.trim() === \"\") {\r\n      setVolunteerNameError(\"Name is required\");\r\n      isValid = false;\r\n    } else if (!/^[a-zA-Z\\s]+$/.test(volunteerDetails.volunteerName)) {\r\n      setVolunteerNameError(\"Name can only contain letters\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerNameError(\"\");\r\n    }\r\n\r\n    // volunteerPhone validation\r\n    if (volunteerDetails.volunteerPhone.trim() === \"\") {\r\n      setVolunteerPhoneError(\"Volunteer Phone number is required\");\r\n      isValid = false;\r\n    } else if (!/^[6-9]{1}[0-9]{9}$/.test(volunteerDetails.volunteerPhone)) {\r\n      setVolunteerPhoneError(\"Volunteer Phone number can only contain numbers and start with(6-9)\");\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerPhone.length !== 10) {\r\n      setVolunteerPhoneError(\"Volunteer Phone number must be 10 digit\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerPhoneError(\"\");\r\n    }\r\n\r\n    // volunteerAlternatePhone validation\r\n    if (volunteerDetails.volunteerAlternatePhone.trim() === \"\") {\r\n      //dont do anything, allow it\r\n    } else if (!/^[0-9]+$/.test(volunteerDetails.volunteerAlternatePhone)) {\r\n      setVolunteerAlternatePhoneError(\"Number can only contain numbers\");\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerAlternatePhone.length !== 10) {\r\n      setVolunteerAlternatePhoneError(\"Number must be 10 digit\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerAlternatePhoneError(\"\");\r\n    }\r\n\r\n    // Volunteer ZIP code validation\r\n    if (volunteerDetails.volunteerZipCode.trim() === \"\") {\r\n      setVolunteerZipCodeError(\"Volunteer ZIP code is required\");\r\n      isValid = false;\r\n    } else if (!/^4[0-4]\\d{4}$/.test(volunteerDetails.volunteerZipCode)) {\r\n      setVolunteerZipCodeError(\"Please enter a valid 6-digit ZIP code and for mh first 2 digit (40-44)\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerZipCodeError(\"\");\r\n    }\r\n\r\n    // Volunteer age validation\r\n    if (volunteerDetails.volunteerAge == null) {\r\n      setVolunteerAgeError(\"Age is required\");\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerAge < 18 && volunteerDetails.volunteerAge >= 80) {\r\n      setVolunteerAgeError(\"Age should be greater than or equal to 18\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerAgeError(\"\");\r\n    }\r\n\r\n    // password validation\r\n    if (volunteerDetails.volunteerPassword.trim() === \"\") {\r\n      setVolunteerPasswordError(\"Password is required\");\r\n      isValid = false;\r\n    } else if (volunteerDetails.volunteerPassword.length < 8) {\r\n      setVolunteerPasswordError(\"Password must be at least 8 characters long\");\r\n      isValid = false;\r\n    } else {\r\n      setVolunteerPasswordError(\"\");\r\n    }\r\n    // Confirm password validation\r\n    if (volunteerDetails.volunteerConfirmPassword.trim() === \"\") {\r\n      setConfirmVolunteerPasswordError(\"confirm Password is required\");\r\n      isValid = false;\r\n    } else if (\r\n      volunteerDetails.volunteerPassword !==\r\n      volunteerDetails.volunteerConfirmPassword\r\n    ) {\r\n      setConfirmVolunteerPasswordError(\"Password Not Matched\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmVolunteerPasswordError(\"\");\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <VolunteerNavigationBar></VolunteerNavigationBar>\r\n      <Container className=\"mt-3 mb-3\">\r\n        <Card\r\n          className=\"shadow-lg p-5 mx-auto\"\r\n          style={{ width: \"75%\", height: \"50%\" }}\r\n        >\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md={{ span: 6 }}>\r\n              <h3 className=\"text-center mb-3\">Edit Profile</h3>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name\"\r\n                    name=\"volunteerName\"\r\n                    value={volunteerDetails.volunteerName}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {volunteerNameError && (\r\n                    <span style={{ color: \"red\" }}>{volunteerNameError} </span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Phone Number</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter phone\"\r\n                    name=\"volunteerPhone\"\r\n                    value={volunteerDetails.volunteerPhone}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {volunteerPhoneError && (\r\n                    <span style={{ color: \"red\" }}>{volunteerPhoneError}</span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label> Alternate Phone Number (optional)</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter alternate phone\"\r\n                    name=\"volunteerAlternatePhone\"\r\n                    value={volunteerDetails.volunteerAlternatePhone}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {volunteerAlternatePhoneError && (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {volunteerAlternatePhoneError}\r\n                    </span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>ZIP Code</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter ZIP code\"\r\n                    name=\"volunteerZipCode\"\r\n                    value={volunteerDetails.volunteerZipCode}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {volunteerZipCodeError && (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {volunteerZipCodeError}\r\n                    </span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Age</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter age\"\r\n                    name=\"volunteerAge\"\r\n                    value={volunteerDetails.volunteerAge}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {volunteerAgeError && (\r\n                    <span style={{ color: \"red\" }}>{volunteerAgeError}</span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    name=\"volunteerPassword\"\r\n                    value={volunteerDetails.volunteerPassword}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {volunteerPasswordError && (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {volunteerPasswordError}\r\n                    </span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"volunteerConfirmPassword\"\r\n                    value={volunteerDetails.volunteerConfirmPassword}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {confirmVolunteerPasswordError && (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {confirmVolunteerPasswordError}\r\n                    </span>\r\n                  )}\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  Update Profile\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonationLandingPage.js",["301","302"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DonationForm from \"./DonationForm\";\r\nimport { DonorNavigationBar } from \"./DonorNavigationBar\";\r\n\r\nexport function DonationLandingPage() {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const donorObj = JSON.parse(localStorage.getItem(\"donor\"));\r\n  const navigate = useNavigate();\r\n\r\n  const handleDonateNowClick = () => {\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (donorObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DonorNavigationBar></DonorNavigationBar>\r\n      {/* <Container fluid > */}\r\n      <Container className=\"bg-light mb-3\">\r\n        <Row className=\"justify-content-center align-items-center\">\r\n          {/* <Col lg={12}> */}\r\n            <h1 className=\"text-center mb-4\">\r\n              Join us in making a difference\r\n            </h1>\r\n            <p className=\"lead text-center mb-4\">\r\n              Your support helps us continue to provide essential services to\r\n              those in need.\r\n            </p>\r\n          {/* </Col> */}\r\n          <Col lg={6}>\r\n            <div>\r\n              <img src=\"https://images.unsplash.com/photo-1532629345422-7515f3d16bb6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80\"\r\n                width={568}\r\n                className=\"rounded\"\r\n              ></img>\r\n            </div>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Row className=\"g-4 justify-content-center\">\r\n              <div className=\" text-center\">\r\n                <Card border=\"primary\" className=\"h-100 rounded-3\">\r\n                  <Card.Body className=\"d-flex flex-column justify-content-between\">\r\n                    <Card.Title className=\"mb-3\">Make a Donation</Card.Title>\r\n                    <Card.Text>\r\n                      Your donation can change lives in more ways than one. It\r\n                      can provide a family with a week's worth of food, offer\r\n                      a homeless person a safe shelter, and also provide\r\n                      stationary, clothing, and other essentials to those in\r\n                      need. Your generosity can make a significant impact on\r\n                      people's lives and provide them with the basic\r\n                      necessities they need to thrive. Imagine the joy on a\r\n                      child's face when they receive new clothes, or the\r\n                      gratitude a struggling family feels when they receive\r\n                      your help. Your donation can be the catalyst for change\r\n                      and create a ripple effect of positivity in your\r\n                      community. Join us in making a difference and donate\r\n                      today!\r\n                    </Card.Text>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      className=\"align-self-center\"\r\n                      onClick={handleDonateNowClick}\r\n                    >\r\n                      Donate Now\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Row>\r\n\r\n          </Col>\r\n          <div className=\"text-center mb-5\">\r\n\r\n          </div>\r\n          {showForm && <DonationForm />}\r\n        </Row>\r\n      </Container>\r\n      {/* </Container> */}\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorHome.js",["303","304","305"],[],"import { useEffect } from \"react\";\r\nimport { Alert, Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DonorNavigationBar } from \"./DonorNavigationBar\";\r\n\r\nexport function DonorHome() {\r\n  const donorObj = JSON.parse(localStorage.getItem(\"donor\"));\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (donorObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DonorNavigationBar></DonorNavigationBar>\r\n      <Container className=\" mb-2\" style={{ minHeight: \"375px\" }} >\r\n        {/* <Row className=\"justify-content-center align-items-center\"> */}\r\n        <Row >\r\n          \r\n          <Container className=\"d-flex justify-content-center p-2 mx-auto\">\r\n          <h1 className=\"mb-4 text-primary\">\r\n              Welcome to the Donor Interface!\r\n          </h1>\r\n            \r\n          </Container>\r\n       \r\n          <Col lg={6} ><img width={500} src=\"https://images.unsplash.com/photo-1488521787991-ed7bbaae773c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80\"></img>\r\n          </Col>\r\n          <Col xs={12} md={8} lg={6} className=\"text-center\">\r\n           <Alert variant=\"primary\">\r\n              Donate to Support Your Favorite Causes\r\n            </Alert>\r\n            <p className=\"mt-4\" style={{ fontFamily: \"Roboto, sans-serif\" }}>\r\n              The Donor Interface makes it easy to support the causes that\r\n              matter most to you. With our platform, you can donate to\r\n              organizations focused on providing stationary, clothing, and raw\r\n              food to those in need. And with our donation tracking system, you\r\n              can keep track of all your donations in one place.\r\n            </p>\r\n            <p className=\"mt-4\" style={{ fontFamily: \"Roboto, sans-serif\" }}>\r\n              When you sign up for a Donor account, you'll have access to your\r\n              own profile page where you can view your donation history. Our\r\n              platform is designed to make giving easy, so you can focus on\r\n              making a difference in the world.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorRegistrationForm.js",["306"],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorProfile.js",["307"],[],"import { useEffect, useState } from \"react\";\r\nimport { Table,Image, Container, Card, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getDonorFromServer } from \"../../services/DonerApiService\";\r\nimport { DonorNavigationBar } from \"./DonorNavigationBar\";\r\n\r\n\r\nexport function DonorProfile() {\r\n  const [donorDetails, setDonorDetails] = useState({});\r\n  const donorObj = JSON.parse(localStorage.getItem(\"donor\"));\r\n  const navigate = useNavigate();\r\n\r\n  const getDonorDetails = async () => {\r\n    const response = await getDonorFromServer(donorObj.donorId);\r\n    if (response.status === 200) {\r\n      setDonorDetails(response.data);\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    if (donorObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    getDonorDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DonorNavigationBar></DonorNavigationBar>\r\n      <Container className=\"mt-1 mb-2\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n        <Card className=\"shadow-lg p-5\">\r\n          <h1 className=\"text-center mb-5\">Donor Profile</h1>\r\n          <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n          <Image src={\"https://www.freeiconspng.com/thumbs/profile-icon-png/am-a-19-year-old-multimedia-artist-student-from-manila--21.png\"} roundedCircle className=\"mr-3\" width={100} height={100} />\r\n          </div>\r\n          <Table responsive striped bordered hover>\r\n            <tbody>\r\n              <tr>\r\n                <th>Name</th>\r\n                <td>{donorDetails.donorName}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Phone Number</th>\r\n                <td>{donorDetails.donorPhone}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Email</th>\r\n                <td>{donorDetails.donorEmail}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Address</th>\r\n                <td>{donorDetails.donorAddress}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>ZIP code</th>\r\n                <td>{donorDetails.donorZipCode}</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n          <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n          <Link to={\"/donorEditProfile\"}>\r\n            <Button className=\"mt-3 \" variant=\"primary\">\r\n              Edit Profile\r\n            </Button>\r\n          </Link>\r\n          </div>\r\n         \r\n        </Card>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorEditProfile.js",["308"],[],"import { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getDonorFromServer,\r\n  updatedDonor,\r\n} from \"../../services/DonerApiService\";\r\nimport { DonorNavigationBar } from \"./DonorNavigationBar\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport function DonorEditProfile() {\r\n  const [donorDetails, setDonorDetails] = useState({});\r\n  const donorObj = JSON.parse(localStorage.getItem(\"donor\"));\r\n  const navigate = useNavigate();\r\n\r\n  //for error State\r\n  const [donorNameError, setDonorNameError] = useState(\"\");\r\n  const [donorPhoneError, setDonorPhoneError] = useState(\"\");\r\n  const [donorPasswordError, setDonorPasswordError] = useState(\"\");\r\n  const [confirmDonorPasswordError, setConfirmDonorPasswordError] =\r\n    useState(\"\");\r\n  const [donorAddressError, setDonorAddressError] = useState(\"\");\r\n  const [donorZipCodeError, setDonorZipCodeError] = useState(\"\");\r\n\r\n  async function getDonorDetails() {\r\n    const response = await getDonorFromServer(donorObj.donorId);\r\n    if (response.status === 200) {\r\n      const updatedDonorDetails = {\r\n        ...response.data,\r\n        donorPassword: \"\",\r\n        donorConfirmPassword: \"\",\r\n      };\r\n      setDonorDetails(updatedDonorDetails);\r\n      console.log(donorDetails);\r\n    }\r\n  }\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    if (donorObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    getDonorDetails();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setDonorDetails({ ...donorDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Define function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validate form inputs\r\n    if (!validate()) {\r\n      return;\r\n    } else {\r\n      const formData = {\r\n        ...donorDetails,\r\n        donorName: donorDetails.donorName,\r\n        donorPhone: donorDetails.donorPhone,\r\n        donorPassword: donorDetails.donorPassword,\r\n        donorAddress: donorDetails.donorAddress,\r\n        donorZipCode: donorDetails.donorZipCode,\r\n      };\r\n\r\n      const response = await updatedDonor(formData);\r\n      console.log(response.data);\r\n      if (response.status === 200) {\r\n        navigate(\"/donorProfile\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //validation of field\r\n  const validate = () => {\r\n    let isValid = true;\r\n    // donorName validation\r\n    if (donorDetails.donorName.trim() === \"\") {\r\n      setDonorNameError(\"donorName is required\");\r\n      isValid = false;\r\n    } else if (!/^[a-zA-Z0-9\\s]+$/.test(donorDetails.donorName)) {\r\n      setDonorNameError(\"donorName can only contain letters and numbers and start with (6-9)\");\r\n      isValid = false;\r\n    } else {\r\n      setDonorNameError(\"\");\r\n    }\r\n\r\n    // DonorPhone validation\r\n    if (donorDetails.donorPhone.trim() === \"\") {\r\n      setDonorPhoneError(\"Donor Phone number is required\");\r\n      isValid = false;\r\n    } else if (!/^[6-9]{1}[0-9]{9}$/.test(donorDetails.donorPhone)) {\r\n      setDonorPhoneError(\r\n        \"Donor Phone number can only contain numbers and of 10 digits and first digit(6-9) \"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setDonorPhoneError(\"\");\r\n    }\r\n\r\n    // Donor Address validation\r\n    if (!donorDetails.donorAddress.trim()) {\r\n      setDonorAddressError(\"Donor Address is required\");\r\n      isValid = false;\r\n    } else {\r\n      setDonorAddressError(\"\");\r\n    }\r\n\r\n    // Donor ZIP code validation\r\n    if (!donorDetails.donorZipCode.trim()) {\r\n      setDonorZipCodeError(\"Donor ZIP code is required\");\r\n      isValid = false;\r\n    } else if (!/^4[0-4]\\d{4}$/.test(donorDetails.donorZipCode)) {\r\n      setDonorZipCodeError(\"Please enter a valid 6-digit ZIP code and for mh first 2 digit (40-44)\");\r\n      isValid = false;\r\n    } else {\r\n      setDonorZipCodeError(\"\");\r\n    }\r\n\r\n    // password validation\r\n    if (donorDetails.donorPassword.trim() === \"\") {\r\n      setDonorPasswordError(\"donorPassword is required\");\r\n      isValid = false;\r\n    } else if (donorDetails.donorPassword.length < 8) {\r\n      setDonorPasswordError(\"donorPassword must be at least 8 characters long\");\r\n      isValid = false;\r\n    } else {\r\n      setDonorPasswordError(\"\");\r\n    }\r\n    // Confirm password validation\r\n    if (donorDetails.donorConfirmPassword.trim() === \"\") {\r\n      setConfirmDonorPasswordError(\"confirmDonorPassword is required\");\r\n      isValid = false;\r\n    } else if (\r\n      donorDetails.donorConfirmPassword !== donorDetails.donorPassword\r\n    ) {\r\n      setConfirmDonorPasswordError(\"Passwords do not match\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmDonorPasswordError(\"\");\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DonorNavigationBar />\r\n      <Container className=\"mt-3 mb-3\">\r\n        <Card\r\n          className=\"shadow-lg p-5 mx-auto\"\r\n          style={{ width: \"75%\", height: \"50%\" }}\r\n        >\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md={{ span: 6 }}>\r\n              <h3 className=\"text-center mb-3\">Edit Profile</h3>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"donorName\"\r\n                    value={donorDetails.donorName || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {donorNameError && (\r\n                    <span style={{ color: \"red\" }}>{donorNameError}</span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Phone</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"donorPhone\"\r\n                    value={donorDetails.donorPhone || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {donorPhoneError && (\r\n                    <span style={{ color: \"red\" }}>{donorPhoneError}</span>\r\n                  )}\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"donorAddress\"\r\n                      value={donorDetails.donorAddress || \"\"}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {donorAddressError && (\r\n                      <span style={{ color: \"red\" }}>{donorAddressError}</span>\r\n                    )}\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Zip Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"donorZipCode\"\r\n                      value={donorDetails.donorZipCode || \"\"}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {donorZipCodeError && (\r\n                      <span style={{ color: \"red\" }}>{donorZipCodeError}</span>\r\n                    )}\r\n                  </Form.Group>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"donorPassword\"\r\n                    value={donorDetails.donorPassword || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {donorPasswordError && (\r\n                    <span style={{ color: \"red\" }}>{donorPasswordError}</span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"donorConfirmPassword\"\r\n                    value={donorDetails.donorConfirmPassword || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {confirmDonorPasswordError && (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {confirmDonorPasswordError}\r\n                    </span>\r\n                  )}\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Save\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorDonationDetails.js",["309","310"],[],"import { useEffect, useState } from \"react\";\r\nimport { getDonorDonationDetails } from \"../../services/DonationApiService\";\r\nimport { Alert, Container, Table } from \"react-bootstrap\";\r\nimport { DonorNavigationBar } from \"./DonorNavigationBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function DonorDonationDetails() {\r\n  const [donorDonationDetails, setDonorDonationDetails] = useState([]);\r\n  const donorObj = JSON.parse(localStorage.getItem(\"donor\"));\r\n  const navigate = useNavigate();\r\n\r\n  const fetchDonationDetails = async () => {\r\n    const response = await getDonorDonationDetails(donorObj.donorId);\r\n    console.log(response.data);\r\n    setDonorDonationDetails(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (donorObj == null) {\r\n      navigate(\"/\");\r\n    }\r\n    fetchDonationDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DonorNavigationBar></DonorNavigationBar>\r\n      <Container className=\"mt-4 mb-4\" style={{ minHeight: \"465px\" }}>\r\n        <h3 className=\"text-center mb-3\">My Donations</h3>\r\n        <div className=\"p-3 bg-light shadow\">\r\n          <Table responsive striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Serial ID</th>\r\n                <th>Raw Food Quantity</th>\r\n                <th>Clothes Quantity</th>\r\n                <th>Stationary Quantity</th>\r\n                <th>Volunteer Assigned</th>\r\n                <th>Volunteer Contact Details</th>\r\n                <th>Volunteer Alternate Contact Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {donorDonationDetails.map((dd, index) => {\r\n                return (\r\n                  <tr key={dd.donationId}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{dd.rawFoodQuantity}</td>\r\n                    <td>{dd.clothesQuantity}</td>\r\n                    <td>{dd.stationaryQuantity}</td>\r\n                    <td>\r\n                      {(dd.volunteer && dd.volunteer.volunteerName) ||\r\n                        \"Not Assigned\"}\r\n                    </td>\r\n                    <td>\r\n                      {(dd.volunteer && dd.volunteer.volunteerPhone) || \"--\"}\r\n                    </td>\r\n                    <td>\r\n                      {(dd.volunteer && dd.volunteer.volunteerAlternatePhone) ||\r\n                        \"--\"}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\NavigationBar.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\EditPassword.js",["311"],[],"import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { userPasswordUpdate } from \"../services/AdminApiService\";\r\n\r\nexport function EditPassword(props) {\r\n  const [donorDetails, setDonorDetails] = useState({\r\n    donorEmail: props.email,\r\n    donorPassword: \"\",\r\n    donorConfirmPassword: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [donorPasswordError, setDonorPasswordError] = useState(\"\");\r\n  const [confirmDonorPasswordError, setConfirmDonorPasswordError] =\r\n    useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setDonorDetails({ ...donorDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validate form inputs\r\n    if (!validate()) {\r\n      return;\r\n    } else {\r\n      const formData = {\r\n        donorEmail: donorDetails.donorEmail,\r\n        donorPassword: donorDetails.donorPassword,\r\n      };\r\n\r\n      console.log(formData);\r\n      const response = await userPasswordUpdate(formData);\r\n      console.log(response.data);\r\n      console.log(\"added data in database\");\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n  //validation of field\r\n  const validate = () => {\r\n    let isValid = true;\r\n\r\n    // password validation\r\n    if (donorDetails.donorPassword.trim() === \"\") {\r\n      setDonorPasswordError(\"Donor Password is required\");\r\n      isValid = false;\r\n    } else if (donorDetails.donorPassword.length < 8) {\r\n      setDonorPasswordError(\r\n        \"Donor Password must be at least 8 characters long\"\r\n      );\r\n      isValid = false;\r\n    } else {\r\n      setDonorPasswordError(\"\");\r\n    }\r\n\r\n    //Confirm password validation\r\n    if (donorDetails.donorConfirmPassword.trim() === \"\") {\r\n      setConfirmDonorPasswordError(\"Confirm Donor Password is required\");\r\n      isValid = false;\r\n    } else if (\r\n      donorDetails.donorPassword !== donorDetails.donorConfirmPassword\r\n    ) {\r\n      setConfirmDonorPasswordError(\"Password Not Matched\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmDonorPasswordError(\"\");\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-4\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1 className=\"mb-4\">Provide New Password</h1>\r\n          <Row>\r\n            <Col lg={3}></Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  name=\"donorPassword\"\r\n                  value={donorDetails.donorPassword}\r\n                  onChange={handleChange}\r\n                />\r\n                {donorPasswordError && (\r\n                  <span style={{ color: \"red\" }}>{donorPasswordError}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={3}></Col>\r\n            <Col lg={3}></Col>\r\n            <Col lg={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Confirm New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Confirm password\"\r\n                  name=\"donorConfirmPassword\"\r\n                  value={donorDetails.donorConfirmPassword}\r\n                  onChange={handleChange}\r\n                />\r\n                {confirmDonorPasswordError && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {confirmDonorPasswordError}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col lg={3}></Col>\r\n          </Row>\r\n          <Button type=\"submit\" variant=\"success\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\admin\\AdminNavigationBar.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\RecipientNavigationBar.js",["312"],[],"import { Component } from \"react\";\r\nimport { Container, Image, Nav, Navbar } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport logo from \"../images/images.png\";\r\n\r\nexport function RecipientNavigationBar(props) {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"recipient\");\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <LinkContainer to={\"/recipientHome\"}>\r\n              <Nav.Link>\r\n                <Image\r\n                  src={logo}\r\n                  alt=\"CharityXchange\"\r\n                  style={{\r\n                    width: \"60px\",\r\n                    height: \"60px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={\"/recipientHome\"}>\r\n              <Nav.Link>Home</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={\"/recipientProfile\"}>\r\n              <Nav.Link>View Profile</Nav.Link>\r\n            </LinkContainer>\r\n\r\n            {(() => {\r\n              if (props.status) {\r\n                return (\r\n                  <>\r\n                    <LinkContainer to={\"/recipientRequestForm\"}>\r\n                      <Nav.Link>Request Form</Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to={\"/recipientViewRequestDetails\"}>\r\n                      <Nav.Link>View Request Details</Nav.Link>\r\n                    </LinkContainer>\r\n                  </>\r\n                );\r\n              } else {\r\n              }\r\n            })()}\r\n\r\n            <LinkContainer to={\"/\"}>\r\n              <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\recipient\\DonationForm.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\DonerApiService.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\DonationApiService.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\Footer.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\AdminApiService.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\RecipientApiService.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\services\\VolunteerApiService.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\volunteer\\VolunteerNavigationBar.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonorNavigationBar.js",[],[],"D:\\Final_Project\\NGO Donation Frontend+Backend v1.1\\DonationFrontend\\src\\components\\donor\\DonationForm.js",[],[],{"ruleId":"313","severity":1,"message":"314","line":1,"column":37,"nodeType":"315","messageId":"316","endLine":1,"endColumn":42},{"ruleId":"313","severity":1,"message":"317","line":1,"column":31,"nodeType":"315","messageId":"316","endLine":1,"endColumn":35},{"ruleId":"313","severity":1,"message":"318","line":1,"column":37,"nodeType":"315","messageId":"316","endLine":1,"endColumn":43},{"ruleId":"313","severity":1,"message":"319","line":3,"column":8,"nodeType":"315","messageId":"316","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"320","line":12,"column":22,"nodeType":"315","messageId":"316","endLine":12,"endColumn":29},{"ruleId":"313","severity":1,"message":"321","line":29,"column":10,"nodeType":"315","messageId":"316","endLine":29,"endColumn":16},{"ruleId":"313","severity":1,"message":"322","line":30,"column":10,"nodeType":"315","messageId":"316","endLine":30,"endColumn":17},{"ruleId":"313","severity":1,"message":"323","line":31,"column":10,"nodeType":"315","messageId":"316","endLine":31,"endColumn":19},{"ruleId":"313","severity":1,"message":"324","line":31,"column":21,"nodeType":"315","messageId":"316","endLine":31,"endColumn":33},{"ruleId":"313","severity":1,"message":"325","line":34,"column":9,"nodeType":"315","messageId":"316","endLine":34,"endColumn":17},{"ruleId":"326","severity":1,"message":"327","line":56,"column":6,"nodeType":"328","endLine":56,"endColumn":15,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":148,"column":27,"nodeType":"332","messageId":"333","endLine":148,"endColumn":29},{"ruleId":"330","severity":1,"message":"334","line":150,"column":34,"nodeType":"332","messageId":"333","endLine":150,"endColumn":36},{"ruleId":"313","severity":1,"message":"319","line":4,"column":8,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"326","severity":1,"message":"335","line":36,"column":6,"nodeType":"328","endLine":36,"endColumn":8,"suggestions":"336"},{"ruleId":"330","severity":1,"message":"334","line":43,"column":34,"nodeType":"332","messageId":"333","endLine":43,"endColumn":36},{"ruleId":"313","severity":1,"message":"337","line":46,"column":11,"nodeType":"315","messageId":"316","endLine":46,"endColumn":19},{"ruleId":"313","severity":1,"message":"338","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":15},{"ruleId":"326","severity":1,"message":"335","line":24,"column":6,"nodeType":"328","endLine":24,"endColumn":8,"suggestions":"339"},{"ruleId":"326","severity":1,"message":"335","line":49,"column":6,"nodeType":"328","endLine":49,"endColumn":8,"suggestions":"340"},{"ruleId":"330","severity":1,"message":"331","line":70,"column":36,"nodeType":"332","messageId":"333","endLine":70,"endColumn":38},{"ruleId":"330","severity":1,"message":"331","line":82,"column":36,"nodeType":"332","messageId":"333","endLine":82,"endColumn":38},{"ruleId":"313","severity":1,"message":"337","line":100,"column":11,"nodeType":"315","messageId":"316","endLine":100,"endColumn":19},{"ruleId":"330","severity":1,"message":"334","line":85,"column":26,"nodeType":"332","messageId":"333","endLine":85,"endColumn":28},{"ruleId":"326","severity":1,"message":"335","line":26,"column":6,"nodeType":"328","endLine":26,"endColumn":8,"suggestions":"341"},{"ruleId":"330","severity":1,"message":"331","line":63,"column":40,"nodeType":"332","messageId":"333","endLine":63,"endColumn":42},{"ruleId":"330","severity":1,"message":"331","line":65,"column":43,"nodeType":"332","messageId":"333","endLine":65,"endColumn":45},{"ruleId":"313","severity":1,"message":"338","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":15},{"ruleId":"326","severity":1,"message":"342","line":45,"column":6,"nodeType":"328","endLine":45,"endColumn":8,"suggestions":"343"},{"ruleId":"326","severity":1,"message":"342","line":25,"column":6,"nodeType":"328","endLine":25,"endColumn":8,"suggestions":"344"},{"ruleId":"313","severity":1,"message":"338","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":15},{"ruleId":"326","severity":1,"message":"342","line":23,"column":6,"nodeType":"328","endLine":23,"endColumn":8,"suggestions":"345"},{"ruleId":"313","severity":1,"message":"318","line":2,"column":38,"nodeType":"315","messageId":"316","endLine":2,"endColumn":44},{"ruleId":"326","severity":1,"message":"346","line":21,"column":6,"nodeType":"328","endLine":21,"endColumn":8,"suggestions":"347"},{"ruleId":"326","severity":1,"message":"348","line":28,"column":6,"nodeType":"328","endLine":28,"endColumn":8,"suggestions":"349"},{"ruleId":"326","severity":1,"message":"342","line":24,"column":6,"nodeType":"328","endLine":24,"endColumn":8,"suggestions":"350"},{"ruleId":"313","severity":1,"message":"319","line":5,"column":8,"nodeType":"315","messageId":"316","endLine":5,"endColumn":14},{"ruleId":"330","severity":1,"message":"334","line":86,"column":26,"nodeType":"332","messageId":"333","endLine":86,"endColumn":28},{"ruleId":"326","severity":1,"message":"351","line":24,"column":7,"nodeType":"328","endLine":24,"endColumn":9,"suggestions":"352"},{"ruleId":"326","severity":1,"message":"353","line":30,"column":6,"nodeType":"328","endLine":30,"endColumn":8,"suggestions":"354"},{"ruleId":"313","severity":1,"message":"338","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":15},{"ruleId":"313","severity":1,"message":"355","line":3,"column":23,"nodeType":"315","messageId":"316","endLine":3,"endColumn":27},{"ruleId":"326","severity":1,"message":"356","line":14,"column":6,"nodeType":"328","endLine":14,"endColumn":8,"suggestions":"357"},{"ruleId":"326","severity":1,"message":"353","line":29,"column":6,"nodeType":"328","endLine":29,"endColumn":8,"suggestions":"358"},{"ruleId":"326","severity":1,"message":"359","line":26,"column":6,"nodeType":"328","endLine":26,"endColumn":8,"suggestions":"360"},{"ruleId":"313","severity":1,"message":"361","line":6,"column":3,"nodeType":"315","messageId":"316","endLine":6,"endColumn":16},{"ruleId":"326","severity":1,"message":"359","line":47,"column":6,"nodeType":"328","endLine":47,"endColumn":8,"suggestions":"362"},{"ruleId":"326","severity":1,"message":"363","line":20,"column":6,"nodeType":"328","endLine":20,"endColumn":8,"suggestions":"364"},{"ruleId":"365","severity":1,"message":"366","line":39,"column":15,"nodeType":"367","endLine":42,"endColumn":16},{"ruleId":"313","severity":1,"message":"318","line":2,"column":38,"nodeType":"315","messageId":"316","endLine":2,"endColumn":44},{"ruleId":"326","severity":1,"message":"363","line":14,"column":6,"nodeType":"328","endLine":14,"endColumn":8,"suggestions":"368"},{"ruleId":"365","severity":1,"message":"366","line":30,"column":24,"nodeType":"367","endLine":30,"endColumn":206},{"ruleId":"330","severity":1,"message":"334","line":78,"column":26,"nodeType":"332","messageId":"333","endLine":78,"endColumn":28},{"ruleId":"326","severity":1,"message":"369","line":27,"column":6,"nodeType":"328","endLine":27,"endColumn":8,"suggestions":"370"},{"ruleId":"326","severity":1,"message":"369","line":44,"column":6,"nodeType":"328","endLine":44,"endColumn":8,"suggestions":"371"},{"ruleId":"313","severity":1,"message":"338","line":3,"column":10,"nodeType":"315","messageId":"316","endLine":3,"endColumn":15},{"ruleId":"326","severity":1,"message":"372","line":23,"column":6,"nodeType":"328","endLine":23,"endColumn":8,"suggestions":"373"},{"ruleId":"313","severity":1,"message":"374","line":3,"column":8,"nodeType":"315","messageId":"316","endLine":3,"endColumn":15},{"ruleId":"313","severity":1,"message":"375","line":1,"column":10,"nodeType":"315","messageId":"316","endLine":1,"endColumn":19},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","'Footer' is defined but never used.","'sendOTP' is defined but never used.","'errors' is assigned a value but never used.","'loading' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'otp', 'showPassword', and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["376"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'adminObj' and 'navigate'. Either include them or remove the dependency array.",["377"],"'response' is assigned a value but never used.","'Alert' is defined but never used.",["378"],["379"],["380"],"React Hook useEffect has missing dependencies: 'fetchRecipientDetails', 'navigate', and 'recipientObj'. Either include them or remove the dependency array.",["381"],["382"],["383"],"React Hook useMemo has a missing dependency: 'fetchRecipientDetails'. Either include it or remove the dependency array.",["384"],"React Hook useEffect has missing dependencies: 'navigate' and 'recipientObj'. Either include them or remove the dependency array.",["385"],["386"],"React Hook useEffect has missing dependencies: 'fetchData', 'navigate', and 'volunteerObj'. Either include them or remove the dependency array.",["387"],"React Hook useEffect has missing dependencies: 'fetchDonorDonationData', 'navigate', and 'volunteerObj'. Either include them or remove the dependency array.",["388"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'volunteerObj'. Either include them or remove the dependency array.",["389"],["390"],"React Hook useEffect has missing dependencies: 'getVolunteerDetails', 'navigate', and 'volunteerObj'. Either include them or remove the dependency array.",["391"],"'saveVolunteer' is defined but never used.",["392"],"React Hook useEffect has missing dependencies: 'donorObj' and 'navigate'. Either include them or remove the dependency array.",["393"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["394"],"React Hook useEffect has missing dependencies: 'donorObj', 'getDonorDetails', and 'navigate'. Either include them or remove the dependency array.",["395"],["396"],"React Hook useEffect has missing dependencies: 'donorObj', 'fetchDonationDetails', and 'navigate'. Either include them or remove the dependency array.",["397"],"'emailjs' is defined but never used.","'Component' is defined but never used.",{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"400","fix":"402"},{"desc":"400","fix":"403"},{"desc":"400","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},{"desc":"405","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"405","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"416","fix":"420"},{"desc":"421","fix":"422"},{"desc":"421","fix":"423"},{"desc":"424","fix":"425"},{"desc":"424","fix":"426"},{"desc":"427","fix":"428"},{"desc":"427","fix":"429"},{"desc":"430","fix":"431"},"Update the dependencies array to be: [otp, seconds, showPassword, userData]",{"range":"432","text":"433"},"Update the dependencies array to be: [adminObj, navigate]",{"range":"434","text":"435"},{"range":"436","text":"435"},{"range":"437","text":"435"},{"range":"438","text":"435"},"Update the dependencies array to be: [fetchRecipientDetails, navigate, recipientObj]",{"range":"439","text":"440"},{"range":"441","text":"440"},{"range":"442","text":"440"},"Update the dependencies array to be: [fetchRecipientDetails]",{"range":"443","text":"444"},"Update the dependencies array to be: [navigate, recipientObj]",{"range":"445","text":"446"},{"range":"447","text":"440"},"Update the dependencies array to be: [fetchData, navigate, volunteerObj]",{"range":"448","text":"449"},"Update the dependencies array to be: [fetchDonorDonationData, navigate, volunteerObj]",{"range":"450","text":"451"},"Update the dependencies array to be: [navigate, volunteerObj]",{"range":"452","text":"453"},{"range":"454","text":"451"},"Update the dependencies array to be: [getVolunteerDetails, navigate, volunteerObj]",{"range":"455","text":"456"},{"range":"457","text":"456"},"Update the dependencies array to be: [donorObj, navigate]",{"range":"458","text":"459"},{"range":"460","text":"459"},"Update the dependencies array to be: [donorObj, getDonorDetails, navigate]",{"range":"461","text":"462"},{"range":"463","text":"462"},"Update the dependencies array to be: [donorObj, fetchDonationDetails, navigate]",{"range":"464","text":"465"},[1679,1688],"[otp, seconds, showPassword, userData]",[958,960],"[adminObj, navigate]",[829,831],[1735,1737],[937,939],[1690,1692],"[fetchRecipientDetails, navigate, recipientObj]",[959,961],[848,850],[908,910],"[fetchRecipientDetails]",[1078,1080],"[navigate, recipientObj]",[890,892],[889,891],"[fetchData, navigate, volunteerObj]",[997,999],"[fetchDonorDonationData, navigate, volunteerObj]",[461,463],"[navigate, volunteerObj]",[1047,1049],[935,937],"[getVolunteerDetails, navigate, volunteerObj]",[1733,1735],[632,634],"[donorObj, navigate]",[433,435],[872,874],"[donorObj, getDonorDetails, navigate]",[1494,1496],[826,828],"[donorObj, fetchDonationDetails, navigate]"]